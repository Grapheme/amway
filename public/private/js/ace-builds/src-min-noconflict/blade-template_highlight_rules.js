/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2012, Ajax.org B.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

/* THIS FILE WAS AUTOGENERATED FROM Blade.tmLanguage (UUID: A58A8867-B92D-427C-9573-9BEDD83E3F47) */
/****************************************************************
 * IT MIGHT NOT BE PERFECT, PARTICULARLY:                       *
 * IN DECIDING STATES TO TRANSITION TO,                         *
 * IGNORING WHITESPACE,                                         *
 * IGNORING GROUPS WITH ?:,                                     *
 * EXTENDING EXISTING MODES,                                    *
 * GATHERING KEYWORDS, OR                                       *
 * DECIDING WHEN TO USE PUSH.                                   *
 * ...But it's a good start from an existing *.tmlanguage file. *
 ****************************************************************/

define(function(require, exports, module) {
"use strict";

var oop = require("../lib/oop");
var TextHighlightRules = require("./text_highlight_rules").TextHighlightRules;

var BladeTemplateHighlightRules = function() {
    // regexp must not have capturing parentheses. Use (?:) instead.
    // regexps are ordered -> the first match is used

    this.$rules = { start: 
       [ { token: 'comment.block.blade',
           regex: '\\{\\{--',
           push: 
            [ { token: 'comment.block.blade', regex: '--\\}\\}', next: 'pop' },
              { defaultToken: 'comment.block.documentation.blade' } ] },
         { token: 'support.constant.php',
           regex: '@?\\{\\{\\{?-?',
           push: 
            [ { include: 'text.html.basic' },
              { token: 'support.constant.php',
                regex: '-?\\}?\\}\\}',
                next: 'pop' },
              { defaultToken: 'comment.embedded.line.blade' } ] },
         { caseInsensitive: true,
           todo: 'fix grouping',
           token: 
            [ 'keyword.control.start.blade',
              'keyword.control.start.blade',
              'keyword.control.blade',
              'keyword.control.blade' ],
           regex: '(\\s{0}|^)(\\@)\\b(if|elseif|foreach|for|while|extends|unless|each|yield|lang|choice|section|include)\\b(?=(|\\s*|)\\()',
           push: 
            [ { include: '#language' },
              { token: 'keyword.control.blade',
                regex: '\\)(?!.*\\))',
                next: 'pop' },
              { defaultToken: 'keyword.control.start.blade' } ] },
         { todo: 'fix grouping',
           token: [ 'keyword.control.blade', 'entity.name.tag.html' ],
           regex: '(\\s{0}|^)(\\@)\\b(.+)\\b(?=(|\\s*|)\\()',
           push: 
            [ { include: '#language' },
              { token: 'text.bounds.blade', regex: '\\)', next: 'pop' },
              { defaultToken: 'keyword.control.inline.blade' } ] },
         undefined,
         undefined,
         { caseInsensitive: true,
           todo: 'fix grouping',
           TODO: 'FIXME: regexp doesn\'t have js equivalent',
           originalRegex: '(((?<=\\?>)<)|<)\\?(?i:php|=)?',
           token: 
            [ 'punctuation.section.embedded.begin.php',
              'text.html.embedded.line.blade',
              'meta.consecutive-tags.php' ],
           regex: '(((?<=\\?>)<)|<)\\?(?:php|=)?',
           push: 
            [ { include: '#language' },
              { todo: 'fix grouping',
                token: [ 'punctuation.section.embedded.end.php', 'source.php' ],
                regex: '(\\?)>',
                next: 'pop' },
              { defaultToken: 'text.html.embedded.line.blade' } ] },
         { todo: 'fix grouping',
           TODO: 'FIXME: regexp doesn\'t have js equivalent',
           originalRegex: '(<)([a-zA-Z0-9:]++)(?=[^>]*></\\2>)',
           token: 
            [ 'meta.tag.any.html',
              'punctuation.definition.tag.html',
              'entity.name.tag.html' ],
           regex: '(<)([a-zA-Z0-9:]++)(?=[^>]*></\\2>)',
           push: 
            [ { include: '#tag-stuff' },
              { todo: 'fix grouping',
                token: 
                 [ 'meta.tag.any.html',
                   'punctuation.definition.tag.html',
                   'meta.scope.between-tag-pair.html',
                   'entity.name.tag.html',
                   'punctuation.definition.tag.html' ],
                regex: '(>(<)/)(\\2)(>)',
                next: 'pop' },
              { defaultToken: 'meta.tag.any.html' } ] },
         { todo: 'fix grouping',
           token: 
            [ 'meta.tag.preprocessor.xml.html',
              'punctuation.definition.tag.html',
              'entity.name.tag.xml.html' ],
           regex: '(<\\?)(xml)',
           push: 
            [ { include: '#tag-generic-attribute' },
              { include: '#string-double-quoted' },
              { include: '#string-single-quoted' },
              { todo: 'fix grouping',
                token: 
                 [ 'meta.tag.preprocessor.xml.html',
                   'punctuation.definition.tag.html',
                   'entity.name.tag.xml.html' ],
                regex: '(\\?>)',
                next: 'pop' },
              { defaultToken: 'meta.tag.preprocessor.xml.html' } ] },
         { token: 'punctuation.definition.comment.html',
           regex: '<!--',
           push: 
            [ { token: 'invalid.illegal.bad-comments-or-CDATA.html',
                regex: '--' },
              { include: '#embedded-code' },
              { token: 'punctuation.definition.comment.html',
                regex: '--\\s*>',
                next: 'pop' },
              { defaultToken: 'comment.block.html' } ] },
         { token: 'punctuation.definition.tag.html',
           regex: '<!',
           push: 
            [ { caseInsensitive: true,
                todo: 'fix grouping',
                token: [ 'meta.tag.sgml.doctype.html', 'entity.name.tag.doctype.html' ],
                regex: '(?:DOCTYPE)',
                push: 
                 [ { token: 'string.quoted.double.doctype.identifiers-and-DTDs.html',
                     regex: '"[^">]*"' },
                   { todo: 'fix grouping',
                     token: [ 'meta.tag.sgml.doctype.html', 'entity.name.tag.doctype.html' ],
                     regex: '(?=>)',
                     next: 'pop' },
                   { defaultToken: 'meta.tag.sgml.doctype.html' } ] },
              { token: 'constant.other.inline-data.html',
                regex: '\\[CDATA\\[',
                push: 
                 [ { token: 'constant.other.inline-data.html',
                     regex: ']](?=>)',
                     next: 'pop' },
                   { defaultToken: 'constant.other.inline-data.html' } ] },
              { token: 'invalid.illegal.bad-comments-or-CDATA.html',
                regex: '(\\s*)(?!--|>)\\S(\\s*)' },
              { token: 'punctuation.definition.tag.html',
                regex: '>',
                next: 'pop' },
              { defaultToken: 'meta.tag.sgml.html' } ] },
         { include: '#embedded-code' },
         { caseInsensitive: true,
           todo: 'fix grouping',
           token: 
            [ 'source.css.embedded.html',
              'punctuation.definition.tag.html',
              'entity.name.tag.style.html',
              'punctuation.definition.tag.html' ],
           regex: '(?:^\\s+)?(<)((?:style))\\b(?![^>]*/>)',
           push: 
            [ { include: '#tag-stuff' },
              { todo: 'fix grouping',
                token: [ 'text', 'punctuation.definition.tag.html' ],
                regex: '(>)',
                push: 
                 [ { include: '#embedded-code' },
                   { include: 'source.css' },
                   { caseInsensitive: true,
                     token: 'text',
                     regex: '(?=</(?:style))',
                     next: 'pop' } ] },
              { caseInsensitive: true,
                todo: 'fix grouping',
                TODO: 'FIXME: regexp doesn\'t have js equivalent',
                originalRegex: '(</)((?i:style))(>)(?:\\s*\\n)?',
                token: 
                 [ 'source.css.embedded.html',
                   'punctuation.definition.tag.html',
                   'entity.name.tag.style.html',
                   'punctuation.definition.tag.html' ],
                regex: '(</)((?:style))(>)(?:\\s*$?',
                next: 'pop' },
              { defaultToken: 'source.css.embedded.html' } ] },
         { caseInsensitive: true,
           todo: 'fix grouping',
           token: 
            [ 'source.js.embedded.html',
              'punctuation.definition.tag.html',
              'entity.name.tag.script.html' ],
           regex: '(?:^\\s+)?(<)((?:script))\\b(?![^>]*/>)',
           push: 
            [ { include: '#tag-stuff' },
              { todo: 'fix grouping',
                TODO: 'FIXME: regexp doesn\'t have js equivalent',
                originalRegex: '(?<!</(?:script|SCRIPT))(>)',
                token: 
                 [ 'text',
                   'punctuation.definition.tag.html',
                   'entity.name.tag.script.html' ],
                regex: '(?<!</(?:script|SCRIPT))(>)',
                push: 
                 [ { caseInsensitive: true,
                     todo: 'fix grouping',
                     token: 
                      [ 'comment.line.double-slash.js',
                        'punctuation.definition.comment.js' ],
                     regex: '(//).*?((?=</script)|$\\n?)' },
                   { token: 'punctuation.definition.comment.js',
                     regex: '/\\*',
                     push: 
                      [ { caseInsensitive: true,
                          token: 'punctuation.definition.comment.js',
                          regex: '\\*/|(?=</script)',
                          next: 'pop' },
                        { defaultToken: 'comment.block.js' } ] },
                   { include: 'source.js' },
                   { caseInsensitive: true,
                     todo: 'fix grouping',
                     token: 
                      [ 'text',
                        'punctuation.definition.tag.html',
                        'entity.name.tag.script.html' ],
                     regex: '(</)((?:script))',
                     next: 'pop' } ] },
              { todo: 'fix grouping',
                TODO: 'FIXME: regexp doesn\'t have js equivalent',
                originalRegex: '(?<=</(script|SCRIPT))(>)(?:\\s*\\n)?',
                token: 
                 [ 'source.js.embedded.html',
                   'source.js.embedded.html',
                   'punctuation.definition.tag.html' ],
                regex: '(?<=</(script|SCRIPT))(>)(?:\\s*$?',
                next: 'pop' },
              { defaultToken: 'source.js.embedded.html' } ] },
         { caseInsensitive: true,
           todo: 'fix grouping',
           token: 
            [ 'meta.tag.structure.any.html',
              'punctuation.definition.tag.html',
              'entity.name.tag.structure.any.html' ],
           regex: '(</?)((?:body|head|html)\\b)',
           push: 
            [ { include: '#tag-stuff' },
              { todo: 'fix grouping',
                token: 
                 [ 'meta.tag.structure.any.html',
                   'punctuation.definition.tag.html',
                   'entity.name.tag.structure.any.html' ],
                regex: '(>)',
                next: 'pop' },
              { defaultToken: 'meta.tag.structure.any.html' } ] },
         { caseInsensitive: true,
           todo: 'fix grouping',
           token: 
            [ 'meta.tag.block.any.html',
              'punctuation.definition.tag.begin.html',
              'entity.name.tag.block.any.html' ],
           regex: '(</?)((?:address|blockquote|dd|div|section|article|aside|header|footer|nav|menu|dl|dt|fieldset|form|frame|frameset|h1|h2|h3|h4|h5|h6|iframe|noframes|object|ol|p|ul|applet|center|dir|hr|pre)\\b)',
           push: 
            [ { include: '#tag-stuff' },
              { todo: 'fix grouping',
                token: 
                 [ 'meta.tag.block.any.html',
                   'punctuation.definition.tag.end.html' ],
                regex: '(>)',
                next: 'pop' },
              { defaultToken: 'meta.tag.block.any.html' } ] },
         { caseInsensitive: true,
           todo: 'fix grouping',
           token: 
            [ 'meta.tag.inline.any.html',
              'punctuation.definition.tag.begin.html',
              'entity.name.tag.inline.any.html' ],
           regex: '(</?)((?:a|abbr|acronym|area|b|base|basefont|bdo|big|br|button|caption|cite|code|col|colgroup|del|dfn|em|font|head|html|i|img|input|ins|isindex|kbd|label|legend|li|link|map|meta|noscript|optgroup|option|param|q|s|samp|script|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|title|tr|tt|u|var)\\b)',
           push: 
            [ { include: '#tag-stuff' },
              { todo: 'fix grouping',
                token: 
                 [ 'meta.tag.inline.any.html',
                   'punctuation.definition.tag.end.html' ],
                regex: '((?: ?/)?>)',
                next: 'pop' },
              { defaultToken: 'meta.tag.inline.any.html' } ] },
         { todo: 'fix grouping',
           token: 
            [ 'meta.tag.other.html',
              'punctuation.definition.tag.begin.html',
              'entity.name.tag.other.html' ],
           regex: '(</?)([a-zA-Z0-9:]+)',
           push: 
            [ { include: '#tag-stuff' },
              { todo: 'fix grouping',
                token: [ 'meta.tag.other.html', 'punctuation.definition.tag.end.html' ],
                regex: '(>)',
                next: 'pop' },
              { defaultToken: 'meta.tag.other.html' } ] },
         { include: '#entities' },
         { token: 'invalid.illegal.incomplete.html', regex: '<>' },
         { caseInsensitive: true,
           todo: 'fix grouping',
           TODO: 'FIXME: regexp doesn\'t have js equivalent',
           originalRegex: '(?x)\r\n\t\t\t\t(^\\s*)?\t\t\t\t\t\t\t# 1 - Leading whitespace\r\n\t\t\t\t\t(\t\t\t\t\t\t\t# 2 - meta.embedded.line.empty.php\r\n\t\t\t\t\t\t(\t\t\t\t\t\t# 3 - Open Tag\r\n\t\t\t\t\t\t\t(?:\r\n\t\t\t\t\t\t\t\t((?<=\\?>)<)\t\t# 4 - Consecutive tags\r\n\t\t\t\t\t\t\t  | <\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\\?(?i:php|=)?\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t(\\s*)\t\t\t\t# 5 - Loneliness\r\n\t\t\t\t\t\t((\\?)>)\t\t\t\t\t# 6 - Close Tag\r\n\t\t\t\t\t\t\t\t\t\t\t\t# 7 - Scope ? as scope.php\r\n\t\t\t\t\t)\r\n\t\t\t\t(\r\n\t\t\t\t\t\\1\t\t\t\t\t\t\t# Match nothing if there was no\r\n\t\t\t\t\t\t\t\t\t\t\t\t#   leading whitespace...\r\n\t\t\t\t  | (\\s*$\\n)?\t\t\t\t\t# or match trailing whitespace.\r\n\t\t\t\t)\r\n\t\t\t',
           token: 
            [ 'text',
              'punctuation.whitespace.embedded.leading.php',
              'source.php.embedded.line.empty.html',
              'punctuation.section.embedded.begin.php',
              'meta.consecutive-tags.php',
              'source.php',
              'punctuation.section.embedded.end.php',
              'source.php',
              'punctuation.whitespace.embedded.trailing.php' ],
           regex: '(^\\s*)?(((?:((?<=\\?>)<)|<)\\?(?:php|=)?)(\\s*)((\\?)>))(\\1|(\\s*$$?)',
           //Matches empty tags.
            },
         { token: 'punctuation.whitespace.embedded.leading.php',
           regex: '^\\s*(?=<\\?)',
           push: 
            [ { caseInsensitive: true,
                token: 'punctuation.section.embedded.begin.php',
                regex: '<\\?(?:php|=)?',
                push: 
                 [ { include: '#language' },
                   { todo: 'fix grouping',
                     token: [ 'punctuation.section.embedded.end.php', 'source.php' ],
                     regex: '(\\?)>',
                     next: 'pop' },
                   { defaultToken: 'source.php.embedded.block.html' } ] },
              { TODO: 'FIXME: regexp doesn\'t have js equivalent',
                originalRegex: '(?<=\\?>)(\\s*$\\n)?',
                token: 'punctuation.whitespace.embedded.trailing.php',
                regex: '(?<=\\?>)(\\s*$$?',
                next: 'pop' } ],
           //Catches tags with preceeding whitespace.
            },
         { caseInsensitive: true,
           todo: 'fix grouping',
           TODO: 'FIXME: regexp doesn\'t have js equivalent',
           originalRegex: '(((?<=\\?>)<)|<)\\?(?i:php|=)?',
           token: 
            [ 'punctuation.section.embedded.begin.php',
              'source.php.embedded.line.html',
              'meta.consecutive-tags.php' ],
           regex: '(((?<=\\?>)<)|<)\\?(?:php|=)?',
           push: 
            [ { include: '#language' },
              { todo: 'fix grouping',
                token: [ 'punctuation.section.embedded.end.php', 'source.php' ],
                regex: '(\\?)>',
                next: 'pop' },
              { defaultToken: 'source.php.embedded.line.html' } ],
           //Catches the remainder.
            } ],
      '#class-builtin': 
       [ { caseInsensitive: true,
           todo: 'fix grouping',
           token: 
            [ 'support.class.builtin.php',
              'punctuation.separator.inheritance.php' ],
           regex: '(\\\\)?\\b(st(dClass|reamWrapper)|R(RD(Graph|Creator|Updater)|untimeException|e(sourceBundle|cursive(RegexIterator|CachingIterator|TreeIterator|Iterator(Iterator)?|DirectoryIterator|FilterIterator|ArrayIterator)|flect(ion(Method|Class|Object|P(arameter|roperty)|Extension|Function(Abstract)?)?|or)|gexIterator)|angeException)|G(lobIterator|magick(Draw|Pixel)?)|X(ML(Reader|Writer)|SLTProcessor)|M(ongo(Regex|Grid(fsFile|FS(Cursor|File)?)|BinData|C(o(de|llection)|ursor)|Timestamp|I(nt(32|64)|d)|D(B(Ref)?|ate))?|ultipleIterator|e(ssageFormatter|mcache(d)?))|Bad(MethodCallException|FunctionCallException)|tidy(Node)?|S(impleXML(Iterator|Element)|oap(Server|Header|Client|Param|Var|Fault)|NMP|CA(_(SoapProxy|LocalProxy))?|p(hinxClient|l(M(inHeap|axHeap)|Bool|S(t(ack|ring)|ubject)|Heap|TempFileObject|Int|Ob(server|jectStorage)|DoublyLinkedList|PriorityQueue|Enum|Queue|F(i(le(Info|Object)|xedArray)|loat)))|e(ekableIterator|rializable)|DO_(Model_(ReflectionDataObject|Type|Property)|Sequence|D(ata(Object|Factory)|AS_(Relational|XML(_Document)?|Setting|ChangeSummary|Data(Object|Factory)))|Exception|List)|wish(Result(s)?|Search)?|VM(Model)?|QLite(Result|3(Result|Stmt)?|Database|Unbuffered)|AM(Message|Connection))|H(ttp(Re(sponse|quest(Pool)?)|Message|InflateStream|DeflateStream|QueryString)|aru(Image|Outline|D(oc|estination)|Page|Encoder|Font|Annotation))|N(o(RewindIterator|rmalizer)|umberFormatter)|C(o(untable|llator)|achingIterator)|T(okyoTyrant(Table|Query)?|ra(nsliterator|versable))|I(n(tlDateFormatter|validArgumentException|finiteIterator)|terator(Iterator|Aggregate)?|magick(Draw|Pixel(Iterator)?)?)|ZipArchive|O(CI-(Collection|Lob)|ut(erIterator|Of(RangeException|BoundsException))|verflowException)|D(irectoryIterator|om(XsltStylesheet|Node|Document(Type)?|ProcessingInstruction|Element|ainException|Attribute)|OM(XPath|N(ode(list)?|amedNodeMap)|C(haracterData|omment)|Text|Implementation|Document(Fragment)?|ProcessingInstruction|E(ntityReference|lement)|Attr)|ate(Time(Zone)?|Interval|Period))|Un(derflowException|expectedValueException)|finfo|P(har(Data|FileInfo)?|DO(Statement)?|arentIterator)|E(rrorException|xception|mptyIterator)|V8Js(Exception)?|KTaglib_(MPEG_(File|AudioProperties)|Tag|ID3v2_(Tag|Frame|AttachedPictureFrame))|Fil(terIterator|esystemIterator)|mysqli(_(stmt|driver|warning|result))?|L(imitIterator|o(cale|gicException)|engthException)|A(MQP(Connection|Exchange|Queue)|ppendIterator|PCIterator|rray(Iterator|Object|Access)))\\b' } ],
      '#class-name': 
       [ { caseInsensitive: true,
           token: 'text',
           regex: '(?=\\\\?[a-z_0-9]+\\\\)',
           push: 
            [ { include: '#namespace' },
              { caseInsensitive: true,
                todo: 'fix grouping',
                token: [ 'text', 'support.class.php' ],
                regex: '([a-z_][a-z_0-9]*)?(?=[^a-z0-9_\\\\])',
                next: 'pop' } ] },
         { include: '#class-builtin' },
         { token: 'text',
           regex: '(?=[\\\\a-zA-Z_])',
           push: 
            [ { include: '#namespace' },
              { caseInsensitive: true,
                todo: 'fix grouping',
                token: [ 'text', 'support.class.php' ],
                regex: '([a-z_][a-z_0-9]*)?(?=[^a-z0-9_\\\\])',
                next: 'pop' } ] } ],
      '#comments': 
       [ { token: 'punctuation.definition.comment.php',
           regex: '/\\*\\*(?:#@\\+)?\\s*$',
           push: 
            [ { include: '#php_doc' },
              { token: 'punctuation.definition.comment.php',
                regex: '\\*/',
                next: 'pop' },
              { defaultToken: 'comment.block.documentation.phpdoc.php' } ],
           //This now only highlights a docblock if the first line contains only /**\r
           //- this is to stop highlighting everything as invalid when people do comment banners with /******** ...\r
           //- Now matches /**#@+ too - used for docblock templates: http://manual.phpdoc.org/HTMLframesConverter/default/phpDocumentor/tutorial_phpDocumentor.howto.pkg.html#basics.docblocktemplate
            },
         { token: 'punctuation.definition.comment.php',
           regex: '/\\*',
           push: 
            [ { token: 'punctuation.definition.comment.php',
                regex: '\\*/',
                next: 'pop' },
              { defaultToken: 'comment.block.php' } ] },
         { todo: 'fix grouping',
           token: 
            [ 'comment.line.double-slash.php',
              'punctuation.definition.comment.php' ],
           regex: '(//).*?($\\n?|(?=\\?>))' },
         { todo: 'fix grouping',
           token: 
            [ 'comment.line.number-sign.php',
              'punctuation.definition.comment.php' ],
           regex: '(#).*?($\\n?|(?=\\?>))' } ],
      '#constants': 
       [ { caseInsensitive: true,
           TODO: 'FIXME: regexp doesn\'t have js equivalent',
           originalRegex: '(?xi)(?=\r\n\t\t\t            (\r\n\t\t\t                (\\\\[a-z_][a-z_0-9]*\\\\[a-z_][a-z_0-9\\\\]*)|\r\n\t\t\t                ([a-z_][a-z_0-9]*\\\\[a-z_][a-z_0-9\\\\]*)\r\n\t\t\t            )\r\n\t\t\t            [^a-z_0-9\\\\])',
           token: 'text',
           regex: '(?xi)(?=\r\n\t\t\t            (\r\n\t\t\t                (\\\\[a-z_][a-z_0-9]*\\\\[a-z_][a-z_0-9\\\\]*)|\r\n\t\t\t                ([a-z_][a-z_0-9]*\\\\[a-z_][a-z_0-9\\\\]*)\r\n\t\t\t            )\r\n\t\t\t            [^a-z_0-9\\\\])',
           push: 
            [ { include: '#namespace' },
              { caseInsensitive: true,
                todo: 'fix grouping',
                token: [ 'text', 'constant.other.php' ],
                regex: '([a-z_][a-z_0-9]*)?(?=[^a-z0-9_\\\\])',
                next: 'pop' } ] },
         { token: 'text',
           regex: '(?=\\\\?[a-zA-Z_\\x7f-\\xff])',
           push: 
            [ { caseInsensitive: true,
                token: 'constant.language.php',
                regex: '\\b(TRUE|FALSE|NULL|__(FILE|DIR|FUNCTION|CLASS|METHOD|LINE|NAMESPACE)__|ON|OFF|YES|NO|NL|BR|TAB)\\b' },
              { todo: 'fix grouping',
                token: 
                 [ 'support.constant.core.php',
                   'punctuation.separator.inheritance.php' ],
                regex: '(\\\\)?\\b(STD(IN|OUT|ERR)|ZEND_(THREAD_SAFE|DEBUG_BUILD)|DEFAULT_INCLUDE_PATH|P(HP_(R(OUND_HALF_(ODD|DOWN|UP|EVEN)|ELEASE_VERSION)|M(INOR_VERSION|A(XPATHLEN|JOR_VERSION))|BINDIR|S(HLIB_SUFFIX|YSCONFDIR|API)|CONFIG_FILE_(SCAN_DIR|PATH)|INT_(MAX|SIZE)|ZTS|O(S|UTPUT_HANDLER_(START|CONT|END))|D(EBUG|ATADIR)|URL_(SCHEME|HOST|USER|P(ORT|A(SS|TH))|QUERY|FRAGMENT)|PREFIX|E(XT(RA_VERSION|ENSION_DIR)|OL)|VERSION(_ID)?|WINDOWS_(NT_(SERVER|DOMAIN_CONTROLLER|WORKSTATION)|VERSION_(M(INOR|AJOR)|BUILD|S(UITEMASK|P_M(INOR|AJOR))|P(RODUCTTYPE|LATFORM)))|L(IBDIR|OCALSTATEDIR))|EAR_(INSTALL_DIR|EXTENSION_DIR))|E_(RECOVERABLE_ERROR|STRICT|NOTICE|CO(RE_(ERROR|WARNING)|MPILE_(ERROR|WARNING))|DEPRECATED|USER_(NOTICE|DEPRECATED|ERROR|WARNING)|PARSE|ERROR|WARNING|ALL))\\b' },
              { todo: 'fix grouping',
                token: 
                 [ 'support.constant.std.php',
                   'punctuation.separator.inheritance.php' ],
                regex: '(\\\\)?\\b(RADIXCHAR|GROUPING|M(_(1_PI|SQRT(1_2|2|3|PI)|2_(SQRTPI|PI)|PI(_(2|4))?|E(ULER)?|L(N(10|2|PI)|OG(10E|2E)))|ON_(GROUPING|1(1|2|0)?|7|2|8|THOUSANDS_SEP|3|DECIMAL_POINT|9|4|5|6))|S(TR_PAD_(RIGHT|BOTH|LEFT)|ORT_(REGULAR|STRING|NUMERIC|DESC|LOCALE_STRING|ASC)|EEK_(SET|CUR|END))|H(TML_(SPECIALCHARS|ENTITIES)|ASH_HMAC)|YES(STR|EXPR)|N(_(S(IGN_POSN|EP_BY_SPACE)|CS_PRECEDES)|O(STR|EXPR)|EGATIVE_SIGN|AN)|C(R(YPT_(MD5|BLOWFISH|S(HA(256|512)|TD_DES|ALT_LENGTH)|EXT_DES)|NCYSTR|EDITS_(G(ROUP|ENERAL)|MODULES|SAPI|DOCS|QA|FULLPAGE|ALL))|HAR_MAX|O(NNECTION_(NORMAL|TIMEOUT|ABORTED)|DESET|UNT_(RECURSIVE|NORMAL))|URRENCY_SYMBOL|ASE_(UPPER|LOWER))|__COMPILER_HALT_OFFSET__|T(HOUS(EP|ANDS_SEP)|_FMT(_AMPM)?)|IN(T_(CURR_SYMBOL|FRAC_DIGITS)|I_(S(YSTEM|CANNER_(RAW|NORMAL))|USER|PERDIR|ALL)|F(O_(GENERAL|MODULES|C(REDITS|ONFIGURATION)|ENVIRONMENT|VARIABLES|LICENSE|ALL))?)|D(_(T_FMT|FMT)|IRECTORY_SEPARATOR|ECIMAL_POINT|A(Y_(1|7|2|3|4|5|6)|TE_(R(SS|FC(1(123|036)|2822|8(22|50)|3339))|COOKIE|ISO8601|W3C|ATOM)))|UPLOAD_ERR_(NO_(TMP_DIR|FILE)|CANT_WRITE|INI_SIZE|OK|PARTIAL|EXTENSION|FORM_SIZE)|P(M_STR|_(S(IGN_POSN|EP_BY_SPACE)|CS_PRECEDES)|OSITIVE_SIGN|ATH(_SEPARATOR|INFO_(BASENAME|DIRNAME|EXTENSION|FILENAME)))|E(RA(_(YEAR|T_FMT|D_(T_FMT|FMT)))?|XTR_(REFS|SKIP|IF_EXISTS|OVERWRITE|PREFIX_(SAME|I(NVALID|F_EXISTS)|ALL))|NT_(NOQUOTES|COMPAT|IGNORE|QUOTES))|FRAC_DIGITS|L(C_(M(ONETARY|ESSAGES)|NUMERIC|C(TYPE|OLLATE)|TIME|ALL)|O(G_(MAIL|SYSLOG|N(O(TICE|WAIT)|DELAY|EWS)|C(R(IT|ON)|ONS)|INFO|ODELAY|D(EBUG|AEMON)|U(SER|UCP)|P(ID|ERROR)|E(RR|MERG)|KERN|WARNING|L(OCAL(1|7|2|3|4|5|0|6)|PR)|A(UTH(PRIV)?|LERT))|CK_(SH|NB|UN|EX)))|A(M_STR|B(MON_(1(1|2|0)?|7|2|8|3|9|4|5|6)|DAY_(1|7|2|3|4|5|6))|SSERT_(BAIL|CALLBACK|QUIET_EVAL|WARNING|ACTIVE)|LT_DIGITS))\\b' },
              { todo: 'fix grouping',
                token: 
                 [ 'support.constant.ext.php',
                   'punctuation.separator.inheritance.php' ],
                regex: '(\\\\)?\\b(GLOB_(MARK|BRACE|NO(SORT|CHECK|ESCAPE)|ONLYDIR|ERR|AVAILABLE_FLAGS)|XML_(SAX_IMPL|HTML_DOCUMENT_NODE|N(OTATION_NODE|AMESPACE_DECL_NODE)|C(OMMENT_NODE|DATA_SECTION_NODE)|TEXT_NODE|OPTION_(SKIP_(TAGSTART|WHITE)|CASE_FOLDING|TARGET_ENCODING)|D(TD_NODE|OCUMENT_(NODE|TYPE_NODE|FRAG_NODE))|PI_NODE|E(RROR_(RECURSIVE_ENTITY_REF|MISPLACED_XML_PI|B(INARY_ENTITY_REF|AD_CHAR_REF)|SYNTAX|NO(NE|_(MEMORY|ELEMENTS))|TAG_MISMATCH|IN(CORRECT_ENCODING|VALID_TOKEN)|DUPLICATE_ATTRIBUTE|UN(CLOSED_(CDATA_SECTION|TOKEN)|DEFINED_ENTITY|KNOWN_ENCODING)|JUNK_AFTER_DOC_ELEMENT|PAR(TIAL_CHAR|AM_ENTITY_REF)|EXTERNAL_ENTITY_HANDLING|A(SYNC_ENTITY|TTRIBUTE_EXTERNAL_ENTITY_REF))|NTITY_(REF_NODE|NODE|DECL_NODE)|LEMENT_(NODE|DECL_NODE))|LOCAL_NAMESPACE|ATTRIBUTE_(N(MTOKEN(S)?|O(TATION|DE))|CDATA|ID(REF(S)?)?|DECL_NODE|EN(TITY|UMERATION)))|M(HASH_(RIPEMD(1(28|60)|256|320)|GOST|MD(2|4|5)|S(HA(1|2(24|56)|384|512)|NEFRU256)|HAVAL(1(28|92|60)|2(24|56))|CRC32(B)?|TIGER(1(28|60))?|WHIRLPOOL|ADLER32)|YSQL(_(BOTH|NUM|CLIENT_(SSL|COMPRESS|I(GNORE_SPACE|NTERACTIVE))|ASSOC)|I_(RE(PORT_(STRICT|INDEX|OFF|ERROR|ALL)|FRESH_(GRANT|MASTER|BACKUP_LOG|S(TATUS|LAVE)|HOSTS|T(HREADS|ABLES)|LOG)|AD_DEFAULT_(GROUP|FILE))|GROUP_FLAG|MULTIPLE_KEY_FLAG|B(INARY_FLAG|OTH|LOB_FLAG)|S(T(MT_ATTR_(CURSOR_TYPE|UPDATE_MAX_LENGTH|PREFETCH_ROWS)|ORE_RESULT)|E(RVER_QUERY_(NO_(GOOD_INDEX_USED|INDEX_USED)|WAS_SLOW)|T_(CHARSET_NAME|FLAG)))|N(O(_D(EFAULT_VALUE_FLAG|ATA)|T_NULL_FLAG)|UM(_FLAG)?)|C(URSOR_TYPE_(READ_ONLY|SCROLLABLE|NO_CURSOR|FOR_UPDATE)|LIENT_(SSL|NO_SCHEMA|COMPRESS|I(GNORE_SPACE|NTERACTIVE)|FOUND_ROWS))|T(YPE_(GEOMETRY|MEDIUM_BLOB|B(IT|LOB)|S(HORT|TRING|ET)|YEAR|N(ULL|EWD(ECIMAL|ATE))|CHAR|TI(ME(STAMP)?|NY(_BLOB)?)|INT(24|ERVAL)|D(OUBLE|ECIMAL|ATE(TIME)?)|ENUM|VAR_STRING|FLOAT|LONG(_BLOB|LONG)?)|IMESTAMP_FLAG)|INIT_COMMAND|ZEROFILL_FLAG|O(N_UPDATE_NOW_FLAG|PT_(NET_(READ_BUFFER_SIZE|CMD_BUFFER_SIZE)|CONNECT_TIMEOUT|INT_AND_FLOAT_NATIVE|LOCAL_INFILE))|D(EBUG_TRACE_ENABLED|ATA_TRUNCATED)|U(SE_RESULT|N(SIGNED_FLAG|IQUE_KEY_FLAG))|P(RI_KEY_FLAG|ART_KEY_FLAG)|ENUM_FLAG|A(S(SOC|YNC)|UTO_INCREMENT_FLAG)))|CRYPT_(R(C(2|6)|IJNDAEL_(1(28|92)|256)|AND)|GOST|XTEA|M(ODE_(STREAM|NOFB|C(BC|FB)|OFB|ECB)|ARS)|BLOWFISH(_COMPAT)?|S(ERPENT|KIPJACK|AFER(128|PLUS|64))|C(RYPT|AST_(128|256))|T(RIPLEDES|HREEWAY|WOFISH)|IDEA|3DES|DE(S|CRYPT|V_(RANDOM|URANDOM))|PANAMA|EN(CRYPT|IGNA)|WAKE|LOKI97|ARCFOUR(_IV)?))|S(TREAM_(REPORT_ERRORS|M(UST_SEEK|KDIR_RECURSIVE)|BUFFER_(NONE|FULL|LINE)|S(HUT_(RD(WR)?|WR)|OCK_(R(DM|AW)|S(TREAM|EQPACKET)|DGRAM)|ERVER_(BIND|LISTEN))|NOTIFY_(RE(SOLVE|DIRECTED)|MIME_TYPE_IS|SEVERITY_(INFO|ERR|WARN)|CO(MPLETED|NNECT)|PROGRESS|F(ILE_SIZE_IS|AILURE)|AUTH_RE(SULT|QUIRED))|C(RYPTO_METHOD_(SSLv(2(_(SERVER|CLIENT)|3_(SERVER|CLIENT))|3_(SERVER|CLIENT))|TLS_(SERVER|CLIENT))|LIENT_(CONNECT|PERSISTENT|ASYNC_CONNECT)|AST_(FOR_SELECT|AS_STREAM))|I(GNORE_URL|S_URL|PPROTO_(RAW|TCP|I(CMP|P)|UDP))|O(OB|PTION_(READ_(BUFFER|TIMEOUT)|BLOCKING|WRITE_BUFFER))|U(RL_STAT_(QUIET|LINK)|SE_PATH)|P(EEK|F_(INET(6)?|UNIX))|ENFORCE_SAFE_MODE|FILTER_(READ|WRITE|ALL))|UNFUNCS_RET_(STRING|TIMESTAMP|DOUBLE)|QLITE(_(R(OW|EADONLY)|MIS(MATCH|USE)|B(OTH|USY)|SCHEMA|N(O(MEM|T(FOUND|ADB)|LFS)|UM)|C(O(RRUPT|NSTRAINT)|ANTOPEN)|TOOBIG|I(NTER(RUPT|NAL)|OERR)|OK|DONE|P(ROTOCOL|ERM)|E(RROR|MPTY)|F(ORMAT|ULL)|LOCKED|A(BORT|SSOC|UTH))|3_(B(OTH|LOB)|NU(M|LL)|TEXT|INTEGER|OPEN_(READ(ONLY|WRITE)|CREATE)|FLOAT|ASSOC)))|CURL(M(SG_DONE|_(BAD_(HANDLE|EASY_HANDLE)|CALL_MULTI_PERFORM|INTERNAL_ERROR|O(UT_OF_MEMORY|K)))|SSH_AUTH_(HOST|NONE|DEFAULT|P(UBLICKEY|ASSWORD)|KEYBOARD)|CLOSEPOLICY_(SLOWEST|CALLBACK|OLDEST|LEAST_(RECENTLY_USED|TRAFFIC))|_(HTTP_VERSION_(1_(1|0)|NONE)|NETRC_(REQUIRED|IGNORED|OPTIONAL)|TIMECOND_(IF(MODSINCE|UNMODSINCE)|LASTMOD)|IPRESOLVE_(V(4|6)|WHATEVER)|VERSION_(SSL|IPV6|KERBEROS4|LIBZ))|INFO_(RE(DIRECT_(COUNT|TIME)|QUEST_SIZE)|S(SL_VERIFYRESULT|TARTTRANSFER_TIME|IZE_(DOWNLOAD|UPLOAD)|PEED_(DOWNLOAD|UPLOAD))|H(TTP_CODE|EADER_(SIZE|OUT))|NAMELOOKUP_TIME|C(ON(NECT_TIME|TENT_(TYPE|LENGTH_(DOWNLOAD|UPLOAD)))|ERTINFO)|TOTAL_TIME|PR(IVATE|ETRANSFER_TIME)|EFFECTIVE_URL|FILETIME)|OPT_(R(E(SUME_FROM|TURNTRANSFER|DIR_PROTOCOLS|FERER|AD(DATA|FUNCTION))|AN(GE|DOM_FILE))|MAX(REDIRS|CONNECTS)|B(INARYTRANSFER|UFFERSIZE)|S(S(H_(HOST_PUBLIC_KEY_MD5|P(RIVATE_KEYFILE|UBLIC_KEYFILE)|AUTH_TYPES)|L(CERT(TYPE|PASSWD)?|_(CIPHER_LIST|VERIFY(HOST|PEER))|ENGINE(_DEFAULT)?|VERSION|KEY(TYPE|PASSWD)?))|TDERR)|H(TTP(GET|HEADER|200ALIASES|_VERSION|PROXYTUNNEL|AUTH)|EADER(FUNCTION)?)|N(O(BODY|SIGNAL|PROGRESS)|ETRC)|C(RLF|O(NNECTTIMEOUT(_MS)?|OKIE(SESSION|JAR|FILE)?)|USTOMREQUEST|ERTINFO|LOSEPOLICY|A(INFO|PATH))|T(RANSFERTEXT|CP_NODELAY|IME(CONDITION|OUT(_MS)?|VALUE))|I(N(TERFACE|FILE(SIZE)?)|PRESOLVE)|DNS_(CACHE_TIMEOUT|USE_GLOBAL_CACHE)|U(RL|SER(PWD|AGENT)|NRESTRICTED_AUTH|PLOAD)|P(R(IVATE|O(GRESSFUNCTION|XY(TYPE|USERPWD|PORT|AUTH)?|TOCOLS))|O(RT|ST(REDIR|QUOTE|FIELDS)?)|UT)|E(GDSOCKET|NCODING)|VERBOSE|K(RB4LEVEL|EYPASSWD)|QUOTE|F(RESH_CONNECT|TP(SSLAUTH|_(S(SL|KIP_PASV_IP)|CREATE_MISSING_DIRS|USE_EP(RT|SV)|FILEMETHOD)|PORT|LISTONLY|APPEND)|ILE(TIME)?|O(RBID_REUSE|LLOWLOCATION)|AILONERROR)|WRITE(HEADER|FUNCTION)|LOW_SPEED_(TIME|LIMIT)|AUTOREFERER)|PRO(XY_(SOCKS(4|5)|HTTP)|TO_(S(CP|FTP)|HTTP(S)?|T(ELNET|FTP)|DICT|F(TP(S)?|ILE)|LDAP(S)?|ALL))|E_(RE(CV_ERROR|AD_ERROR)|GOT_NOTHING|MALFORMAT_USER|BAD_(C(ONTENT_ENCODING|ALLING_ORDER)|PASSWORD_ENTERED|FUNCTION_ARGUMENT)|S(S(H|L_(C(IPHER|ONNECT_ERROR|ERTPROBLEM|ACERT)|PEER_CERTIFICATE|ENGINE_(SETFAILED|NOTFOUND)))|HARE_IN_USE|END_ERROR)|HTTP_(RANGE_ERROR|NOT_FOUND|PO(RT_FAILED|ST_ERROR))|COULDNT_(RESOLVE_(HOST|PROXY)|CONNECT)|T(OO_MANY_REDIRECTS|ELNET_OPTION_SYNTAX)|O(BSOLETE|UT_OF_MEMORY|PERATION_TIMEOUTED|K)|U(RL_MALFORMAT(_USER)?|N(SUPPORTED_PROTOCOL|KNOWN_TELNET_OPTION))|PARTIAL_FILE|F(TP_(BAD_DOWNLOAD_RESUME|SSL_FAILED|C(OULDNT_(RETR_FILE|GET_SIZE|S(TOR_FILE|ET_(BINARY|ASCII))|USE_REST)|ANT_(RECONNECT|GET_HOST))|USER_PASSWORD_INCORRECT|PORT_FAILED|QUOTE_ERROR|W(RITE_ERROR|EIRD_(SERVER_REPLY|227_FORMAT|USER_REPLY|PAS(S_REPLY|V_REPLY)))|ACCESS_DENIED)|ILE(SIZE_EXCEEDED|_COULDNT_READ_FILE)|UNCTION_NOT_FOUND|AILED_INIT)|WRITE_ERROR|L(IBRARY_NOT_FOUND|DAP_(SEARCH_FAILED|CANNOT_BIND|INVALID_URL))|ABORTED_BY_CALLBACK)|VERSION_NOW|FTP(METHOD_(MULTICWD|SINGLECWD|NOCWD)|SSL_(NONE|CONTROL|TRY|ALL)|AUTH_(SSL|TLS|DEFAULT))|AUTH_(GSSNEGOTIATE|BASIC|NTLM|DIGEST|ANY(SAFE)?))|I(MAGETYPE_(GIF|XBM|BMP|SWF|COUNT|TIFF_(MM|II)|I(CO|FF)|UNKNOWN|J(B2|P(X|2|C|EG(2000)?))|P(SD|NG)|WBMP)|NPUT_(REQUEST|GET|SE(RVER|SSION)|COOKIE|POST|ENV)|CONV_(MIME_DECODE_(STRICT|CONTINUE_ON_ERROR)|IMPL|VERSION))|D(NS_(MX|S(RV|OA)|HINFO|N(S|APTR)|CNAME|TXT|PTR|A(NY|LL|AAA|6)?)|OM(STRING_SIZE_ERR|_(SYNTAX_ERR|HIERARCHY_REQUEST_ERR|N(O(_(MODIFICATION_ALLOWED_ERR|DATA_ALLOWED_ERR)|T_(SUPPORTED_ERR|FOUND_ERR))|AMESPACE_ERR)|IN(DEX_SIZE_ERR|USE_ATTRIBUTE_ERR|VALID_(MODIFICATION_ERR|STATE_ERR|CHARACTER_ERR|ACCESS_ERR))|PHP_ERR|VALIDATION_ERR|WRONG_DOCUMENT_ERR)))|JSON_(HEX_(TAG|QUOT|A(MP|POS))|NUMERIC_CHECK|ERROR_(S(YNTAX|TATE_MISMATCH)|NONE|CTRL_CHAR|DEPTH|UTF8)|FORCE_OBJECT)|P(REG_(RECURSION_LIMIT_ERROR|GREP_INVERT|BA(CKTRACK_LIMIT_ERROR|D_UTF8_(OFFSET_ERROR|ERROR))|S(PLIT_(NO_EMPTY|OFFSET_CAPTURE|DELIM_CAPTURE)|ET_ORDER)|NO_ERROR|INTERNAL_ERROR|OFFSET_CAPTURE|PATTERN_ORDER)|SFS_(PASS_ON|ERR_FATAL|F(EED_ME|LAG_(NORMAL|FLUSH_(CLOSE|INC))))|CRE_VERSION|OSIX_(R_OK|X_OK|S_IF(REG|BLK|SOCK|CHR|IFO)|F_OK|W_OK))|F(NM_(NOESCAPE|CASEFOLD|P(ERIOD|ATHNAME))|IL(TER_(REQUIRE_(SCALAR|ARRAY)|SANITIZE_(MAGIC_QUOTES|S(TRI(NG|PPED)|PECIAL_CHARS)|NUMBER_(INT|FLOAT)|URL|E(MAIL|NCODED)|FULL_SPECIAL_CHARS)|NULL_ON_FAILURE|CALLBACK|DEFAULT|UNSAFE_RAW|VALIDATE_(REGEXP|BOOLEAN|I(NT|P)|URL|EMAIL|FLOAT)|F(ORCE_ARRAY|LAG_(S(CHEME_REQUIRED|TRIP_(BACKTICK|HIGH|LOW))|HOST_REQUIRED|NO(NE|_(RES_RANGE|PRIV_RANGE|ENCODE_QUOTES))|IPV(4|6)|PATH_REQUIRED|E(MPTY_STRING_NULL|NCODE_(HIGH|LOW|AMP))|QUERY_REQUIRED|ALLOW_(SCIENTIFIC|HEX|THOUSAND|OCTAL|FRACTION))))|E(_(BINARY|SKIP_EMPTY_LINES|NO_DEFAULT_CONTEXT|TEXT|IGNORE_NEW_LINES|USE_INCLUDE_PATH|APPEND)|INFO_(RAW|MIME(_(TYPE|ENCODING))?|SYMLINK|NONE|CONTINUE|DEVICES|PRESERVE_ATIME)))|ORCE_(GZIP|DEFLATE))|LIBXML_(XINCLUDE|N(SCLEAN|O(XMLDECL|BLANKS|NET|CDATA|E(RROR|MPTYTAG|NT)|WARNING))|COMPACT|D(TD(VALID|LOAD|ATTR)|OTTED_VERSION)|PARSEHUGE|ERR_(NONE|ERROR|FATAL|WARNING)|VERSION|LOADED_VERSION))\\b' },
              { todo: 'fix grouping',
                token: 
                 [ 'support.constant.parser-token.php',
                   'punctuation.separator.inheritance.php' ],
                regex: '(\\\\)?\\bT_(RE(TURN|QUIRE(_ONCE)?)|G(OTO|LOBAL)|XOR_EQUAL|M(INUS_EQUAL|OD_EQUAL|UL_EQUAL|ETHOD_C|L_COMMENT)|B(REAK|OOL(_CAST|EAN_(OR|AND))|AD_CHARACTER)|S(R(_EQUAL)?|T(RING(_(CAST|VARNAME))?|A(RT_HEREDOC|TIC))|WITCH|L(_EQUAL)?)|HALT_COMPILER|N(S_(SEPARATOR|C)|UM_STRING|EW|AMESPACE)|C(HARACTER|O(MMENT|N(ST(ANT_ENCAPSED_STRING)?|CAT_EQUAL|TINUE))|URLY_OPEN|L(O(SE_TAG|NE)|ASS(_C)?)|A(SE|TCH))|T(RY|HROW)|I(MPLEMENTS|S(SET|_(GREATER_OR_EQUAL|SMALLER_OR_EQUAL|NOT_(IDENTICAL|EQUAL)|IDENTICAL|EQUAL))|N(STANCEOF|C(LUDE(_ONCE)?)?|T(_CAST|ERFACE)|LINE_HTML)|F)|O(R_EQUAL|BJECT_(CAST|OPERATOR)|PEN_TAG(_WITH_ECHO)?|LD_FUNCTION)|D(NUMBER|I(R|V_EQUAL)|O(C_COMMENT|UBLE_(C(OLON|AST)|ARROW)|LLAR_OPEN_CURLY_BRACES)?|E(C(LARE)?|FAULT))|U(SE|NSET(_CAST)?)|P(R(I(NT|VATE)|OTECTED)|UBLIC|LUS_EQUAL|AAMAYIM_NEKUDOTAYIM)|E(X(TENDS|IT)|MPTY|N(CAPSED_AND_WHITESPACE|D(SWITCH|_HEREDOC|IF|DECLARE|FOR(EACH)?|WHILE))|CHO|VAL|LSE(IF)?)|VAR(IABLE)?|F(I(NAL|LE)|OR(EACH)?|UNC(_C|TION))|WHI(TESPACE|LE)|L(NUMBER|I(ST|NE)|OGICAL_(XOR|OR|AND))|A(RRAY(_CAST)?|BSTRACT|S|ND_EQUAL))\\b' },
              { token: 'constant.other.php',
                regex: '[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*',
                //In PHP, any identifier which is not a variable is taken to be a constant.\r
                //        \t\t\t\tHowever, if there is no constant defined with the given name then a notice\r
                //        \t\t\t\tis generated and the constant is assumed to have the value of its name.
                 },
              { token: 'text',
                regex: '(?=[^\\\\a-zA-Z_\\x7f-\\xff])',
                next: 'pop' } ] } ],
      '#embedded-code': [ { include: '#smarty' }, { include: '#python' } ],
      '#entities': 
       [ { todo: 'fix grouping',
           token: 
            [ 'constant.character.entity.html',
              'punctuation.definition.entity.html',
              'constant.character.entity.html',
              'punctuation.definition.entity.html' ],
           regex: '(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)' },
         { token: 'invalid.illegal.bad-ampersand.html', regex: '&' } ],
      '#function-arguments': 
       [ { include: '#comments' },
         { todo: 'fix grouping',
           token: 
            [ 'meta.function.argument.array.php',
              'storage.type.php',
              'storage.modifier.reference.php',
              'variable.other.php',
              'punctuation.definition.variable.php',
              'keyword.operator.assignment.php',
              'support.function.construct.php',
              'punctuation.definition.array.begin.php' ],
           regex: '\\s*(array)\\s*(&)?\\s*((\\$+)[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*)\\s*(=)\\s*(array)\\s*(\\()',
           push: 
            [ { include: '#comments' },
              { include: '#strings' },
              { include: '#numbers' },
              { token: 'punctuation.definition.array.end.php',
                regex: '\\)',
                next: 'pop' },
              { defaultToken: 'meta.function.argument.array.php' } ] },
         { caseInsensitive: true,
           todo: 'fix grouping',
           TODO: 'FIXME: regexp doesn\'t have js equivalent',
           originalRegex: '(?xi)\r\n\t\t\t\t\t\t\t\\s*(array) # Typehint\r\n\t\t\t\t\t\t\t\\s*(&)? \t\t\t\t\t# Reference\r\n\t\t\t\t\t\t\t\\s*((\\$+)[a-z_\\x{7f}-\\x{ff}][a-z0-9_\\x{7f}-\\x{ff}]*) # The variable name\r\n\t\t\t\t\t\t\t(?:\r\n\t\t\t\t\t\t\t\t\\s*(?:(=)\\s*(?:(null)|((?:\\S*?\\(\\))|(?:\\S*?))))\t# A default value\r\n\t\t\t\t\t\t\t)?\r\n\t\t\t\t\t\t\t\\s*(?=,|\\)|/[/*]|\\#|$) # A closing parentheses (end of argument list) or a comma or a comment\r\n\t\t\t\t\t\t\t',
           token: 
            [ 'meta.function.argument.array.php',
              'storage.type.php',
              'storage.modifier.reference.php',
              'variable.other.php',
              'punctuation.definition.variable.php',
              'keyword.operator.assignment.php',
              'constant.language.php',
              'invalid.illegal.non-null-typehinted.php' ],
           regex: '(?xi)\r\n\t\t\t\t\t\t\t\\s*(array) # Typehint\r\n\t\t\t\t\t\t\t\\s*(&)? \t\t\t\t\t# Reference\r\n\t\t\t\t\t\t\t\\s*((\\$+)[a-z_\\x7f-\\xff][a-z0-9_\\x7f-\\xff]*) # The variable name\r\n\t\t\t\t\t\t\t(?:\r\n\t\t\t\t\t\t\t\t\\s*(?:(=)\\s*(?:(null)|((?:\\S*?\\(\\))|(?:\\S*?))))\t# A default value\r\n\t\t\t\t\t\t\t)?\r\n\t\t\t\t\t\t\t\\s*(?=,|\\)|/[/*]|\\#|$) # A closing parentheses (end of argument list) or a comma or a comment\r\n\t\t\t\t\t\t\t' },
         { caseInsensitive: true,
           token: 'meta.function.argument.typehinted.php',
           regex: '(?=[a-z_0-9\\\\]*[a-z_][a-z_0-9]*\\s*&?\\s*\\$)',
           push: 
            [ { include: '#class-name' },
              { caseInsensitive: true,
                todo: 'fix grouping',
                TODO: 'FIXME: regexp doesn\'t have js equivalent',
                originalRegex: '(?xi)\r\n        \t\t\t\t\t\t\t\\s*([a-z_][a-z_0-9]*)? # Typehinted class name\r\n        \t\t\t\t\t\t\t\\s*(&)? \t\t\t\t\t# Reference\r\n        \t\t\t\t\t\t\t\\s*((\\$+)[a-z_\\x{7f}-\\x{ff}][a-z0-9_\\x{7f}-\\x{ff}]*) # The variable name\r\n        \t\t\t\t\t\t\t(?:\r\n        \t\t\t\t\t\t\t\t\\s*(?:(=)\\s*(?:(null)|((?:\\S*?\\(\\))|(?:\\S*?))))\t# A default value\r\n        \t\t\t\t\t\t\t)?\r\n        \t\t\t\t\t\t\t\\s*(?=,|\\)|/[/*]|\\#|$) # A closing parentheses (end of argument list) or a comma\r\n\t\t\t\t\t        ',
                token: 
                 [ 'text',
                   'support.class.php',
                   'storage.modifier.reference.php',
                   'variable.other.php',
                   'punctuation.definition.variable.php',
                   'keyword.operator.assignment.php',
                   'constant.language.php',
                   'invalid.illegal.non-null-typehinted.php' ],
                regex: '(?xi)\r\n        \t\t\t\t\t\t\t\\s*([a-z_][a-z_0-9]*)? # Typehinted class name\r\n        \t\t\t\t\t\t\t\\s*(&)? \t\t\t\t\t# Reference\r\n        \t\t\t\t\t\t\t\\s*((\\$+)[a-z_\\x7f-\\xff][a-z0-9_\\x7f-\\xff]*) # The variable name\r\n        \t\t\t\t\t\t\t(?:\r\n        \t\t\t\t\t\t\t\t\\s*(?:(=)\\s*(?:(null)|((?:\\S*?\\(\\))|(?:\\S*?))))\t# A default value\r\n        \t\t\t\t\t\t\t)?\r\n        \t\t\t\t\t\t\t\\s*(?=,|\\)|/[/*]|\\#|$) # A closing parentheses (end of argument list) or a comma\r\n\t\t\t\t\t        ' },
              { token: 'meta.function.argument.typehinted.php',
                regex: '(?=,|\\)|/[/*]|\\#|$)',
                next: 'pop' },
              { defaultToken: 'meta.function.argument.typehinted.php' } ] },
         { todo: 'fix grouping',
           token: 
            [ 'meta.function.argument.no-default.php',
              'storage.modifier.reference.php',
              'variable.other.php',
              'punctuation.definition.variable.php' ],
           regex: '(\\s*&)?\\s*((\\$+)[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*)\\s*(?=,|\\)|/[/*]|\\#)' },
         { todo: 'fix grouping',
           token: 
            [ 'meta.function.argument.default.php',
              'storage.modifier.reference.php',
              'variable.other.php',
              'punctuation.definition.variable.php',
              'keyword.operator.assignment.php' ],
           regex: '(\\s*&)?\\s*((\\$+)[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*)(?:\\s*(=)\\s*)\\s*',
           push: 
            [ { include: '#parameter-default-types' },
              { todo: 'fix grouping',
                token: 
                 [ 'meta.function.argument.default.php',
                   'storage.modifier.reference.php',
                   'variable.other.php',
                   'punctuation.definition.variable.php',
                   'keyword.operator.assignment.php' ],
                regex: '(?=,|\\)|/[/*]|\\#)',
                next: 'pop' },
              { defaultToken: 'meta.function.argument.default.php' } ] } ],
      '#function-call': 
       [ { caseInsensitive: true,
           token: 'text',
           regex: '(?=\\\\?[a-z_0-9\\\\]+\\\\[a-z_][a-z0-9_]*\\s*\\()',
           push: 
            [ { include: '#user-function-call' },
              { token: 'text', regex: '(?=\\s*\\()', next: 'pop' } ],
           //Functions in a user-defined namespace (overrides any built-ins)
            },
         { caseInsensitive: true,
           token: 'support.function.construct.php',
           regex: '\\b(print|echo)\\b' },
         { caseInsensitive: true,
           todo: 'fix grouping',
           token: [ 'text', 'punctuation.separator.inheritance.php' ],
           regex: '(\\\\)?(?=\\b[a-z_][a-z_0-9]*\\s*\\()',
           push: 
            [ { caseInsensitive: true,
                token: 'support.function.construct.php',
                regex: '\\b(isset|unset|e(val|mpty)|list)(?=\\s*\\()' },
              { include: '#support' },
              { include: '#user-function-call' },
              { token: 'text', regex: '(?=\\s*\\()', next: 'pop' } ],
           //Root namespace function calls (built-in or user)
            } ],
      '#heredoc': 
       [ { token: 'string.unquoted.heredoc.php',
           regex: '(?=<<<\\s*(\'?)([a-zA-Z_]+[a-zA-Z0-9_]*)(\\1)\\s*$)',
           push: 
            [ { todo: 'fix grouping',
                token: 
                 [ 'punctuation.section.embedded.begin.php',
                   'punctuation.definition.string.php',
                   'keyword.operator.heredoc.php' ],
                regex: '(<<<)\\s*(HTML)\\s*$\\n?',
                push: 
                 [ { include: 'text.html.basic' },
                   { include: '#interpolation' },
                   { token: 'meta.embedded.html',
                     regex: '(?=^\\2\\b)',
                     next: 'pop' },
                   { defaultToken: 'meta.embedded.html' } ] },
              { todo: 'fix grouping',
                token: 
                 [ 'punctuation.section.embedded.begin.php',
                   'punctuation.definition.string.php',
                   'keyword.operator.heredoc.php' ],
                regex: '(<<<)\\s*(XML)\\s*$\\n?',
                push: 
                 [ { include: 'text.xml' },
                   { include: '#interpolation' },
                   { token: 'meta.embedded.xml', regex: '(?=^\\2\\b)', next: 'pop' },
                   { defaultToken: 'meta.embedded.xml' } ] },
              { todo: 'fix grouping',
                token: 
                 [ 'punctuation.section.embedded.begin.php',
                   'punctuation.definition.string.php',
                   'keyword.operator.heredoc.php' ],
                regex: '(<<<)\\s*(SQL)\\s*$\\n?',
                push: 
                 [ { include: 'source.sql' },
                   { include: '#interpolation' },
                   { token: 'meta.embedded.sql', regex: '(?=^\\2\\b)', next: 'pop' },
                   { defaultToken: 'meta.embedded.sql' } ] },
              { todo: 'fix grouping',
                token: 
                 [ 'punctuation.section.embedded.begin.php',
                   'punctuation.definition.string.php',
                   'keyword.operator.heredoc.php' ],
                regex: '(<<<)\\s*(JAVASCRIPT)\\s*$\\n?',
                push: 
                 [ { include: 'source.js' },
                   { include: '#interpolation' },
                   { token: 'meta.embedded.js', regex: '(?=^\\2\\b)', next: 'pop' },
                   { defaultToken: 'meta.embedded.js' } ] },
              { todo: 'fix grouping',
                token: 
                 [ 'punctuation.section.embedded.begin.php',
                   'punctuation.definition.string.php',
                   'keyword.operator.heredoc.php' ],
                regex: '(<<<)\\s*(JSON)\\s*$\\n?',
                push: 
                 [ { include: 'source.json' },
                   { include: '#interpolation' },
                   { token: 'meta.embedded.json',
                     regex: '(?=^\\2\\b)',
                     next: 'pop' },
                   { defaultToken: 'meta.embedded.json' } ] },
              { todo: 'fix grouping',
                token: 
                 [ 'punctuation.section.embedded.begin.php',
                   'punctuation.definition.string.php',
                   'keyword.operator.heredoc.php' ],
                regex: '(<<<)\\s*(CSS)\\s*$\\n?',
                push: 
                 [ { include: 'source.css' },
                   { include: '#interpolation' },
                   { token: 'meta.embedded.css', regex: '(?=^\\2\\b)', next: 'pop' },
                   { defaultToken: 'meta.embedded.css' } ] },
              { todo: 'fix grouping',
                token: 
                 [ 'text',
                   'punctuation.definition.string.php',
                   'keyword.operator.heredoc.php' ],
                regex: '(<<<)\\s*([a-zA-Z_]+[a-zA-Z0-9_]*)',
                push: 
                 [ { include: '#interpolation' },
                   { token: 'text', regex: '(?=^\\2\\b)', next: 'pop' } ] },
              { todo: 'fix grouping',
                token: 
                 [ 'string.unquoted.nowdoc.php',
                   'punctuation.definition.string.php',
                   'keyword.operator.heredoc.php' ],
                regex: '(<<<)\\s*\'([a-zA-Z_]+[a-zA-Z0-9_]*)\'',
                push: 
                 [ { token: 'string.unquoted.nowdoc.php',
                     regex: '(?=^\\2\\b)',
                     next: 'pop' },
                   { defaultToken: 'string.unquoted.nowdoc.php' } ] },
              { todo: 'fix grouping',
                token: 
                 [ 'string.unquoted.heredoc.php',
                   'keyword.operator.heredoc.php',
                   'punctuation.section.embedded.end.php' ],
                regex: '^((HTML|XML|SQL|JAVASCRIPT|JSON|CSS)|\\2)\\b',
                next: 'pop' },
              { defaultToken: 'string.unquoted.heredoc.php' } ] } ],
      '#instantiation': 
       [ { caseInsensitive: true,
           todo: 'fix grouping',
           token: [ 'text', 'keyword.other.new.php' ],
           regex: '(new)\\s+',
           push: 
            [ { token: 'storage.type.php',
                regex: '(parent|static|self)(?=[^a-z0-9_])' },
              { include: '#class-name' },
              { include: '#variable-name' },
              { caseInsensitive: true,
                token: 'text',
                regex: '(?=[^$a-z0-9_\\\\])',
                next: 'pop' } ] } ],
      '#interpolation': 
       [ { token: 'constant.numeric.octal.php', regex: '\\\\[0-7]{1,3}' },
         { token: 'constant.numeric.hex.php',
           regex: '\\\\x[0-9A-Fa-f]{1,2}' },
         { token: 'constant.character.escape.php',
           regex: '\\\\[nrt\\\\\\$\\"]' },
         { todo: 'fix grouping',
           token: [ 'text', 'punctuation.definition.variable.php' ],
           regex: '(\\{)(?=\\$.*?\\})',
           push: 
            [ { include: '#language' },
              { todo: 'fix grouping',
                token: [ 'text', 'punctuation.definition.variable.php' ],
                regex: '(\\})',
                next: 'pop' } ] },
         { include: '#variable-name' } ],
      '#invoke-call': 
       [ { caseInsensitive: true,
           todo: 'fix grouping',
           token: 
            [ 'meta.function-call.invoke.php',
              'punctuation.definition.variable.php',
              'variable.other.php' ],
           regex: '(\\$+)([a-z_][a-z_0-9]*)(?=\\s*\\()' } ],
      '#language': 
       [ { include: '#comments' },
         { caseInsensitive: true,
           todo: 'fix grouping',
           token: 
            [ 'meta.interface.php',
              'storage.type.interface.php',
              'entity.name.type.interface.php',
              'storage.modifier.extends.php' ],
           regex: '^\\s*(interface)\\s+([a-z0-9_]+)\\s*(extends)?\\s*',
           push: 
            [ { include: '#namespace' },
              { todo: 'fix grouping',
                token: [ 'meta.interface.php', 'entity.other.inherited-class.php' ],
                regex: '([a-zA-Z0-9_]+)?\\s*(?:(?=\\{)|$)',
                next: 'pop' },
              { defaultToken: 'meta.interface.php' } ] },
         { caseInsensitive: true,
           todo: 'fix grouping',
           token: [ 'meta.namespace.php', 'keyword.other.namespace.php' ],
           regex: '^\\s*(namespace)\\b\\s+(?=([a-z0-9_\\\\]+\\s*($|[;{]|(\\/[\\/*])))|$)',
           push: 
            [ { token: 'punctuation.separator.inheritance.php',
                regex: '\\\\' },
              { caseInsensitive: true,
                token: 'meta.namespace.php',
                regex: '(?=\\s*$|[^a-z0-9_\\\\])',
                next: 'pop' },
              { defaultToken: 'meta.namespace.php' } ] },
         { caseInsensitive: true,
           todo: 'fix grouping',
           token: [ 'meta.use.php', 'keyword.other.use.php' ],
           regex: '\\s*\\b(use)\\s+',
           push: 
            [ { include: '#comments' },
              { caseInsensitive: true,
                token: 'text',
                regex: '\\s*(?=[a-z_0-9\\\\])',
                push: 
                 [ { include: '#class-builtin' },
                   { caseInsensitive: true,
                     token: 'support.other.namespace.use.php',
                     regex: '\\s*(?=[\\\\a-z_0-9])',
                     push: 
                      [ { token: 'punctuation.separator.inheritance.php',
                          regex: '\\\\' },
                        { token: 'support.other.namespace.use.php',
                          regex: '$|(?=[\\s,;])',
                          next: 'pop' },
                        { defaultToken: 'support.other.namespace.use.php' } ] },
                   { caseInsensitive: true,
                     todo: 'fix grouping',
                     TODO: 'FIXME: regexp doesn\'t have js equivalent',
                     originalRegex: '(?xi)(?:\r\n    \t\t\t                (?:\\s*(as)\\b\\s*([a-z_0-9]*)\\s*(?=,|;|$))\r\n    \t\t\t                |(?=,|;|$)\r\n    \t\t\t            )',
                     token: 
                      [ 'text',
                        'keyword.other.use-as.php',
                        'support.other.namespace.use-as.php' ],
                     regex: '(?xi)(?:\r\n    \t\t\t                (?:\\s*(as)\\b\\s*([a-z_0-9]*)\\s*(?=,|;|$))\r\n    \t\t\t                |(?=,|;|$)\r\n    \t\t\t            )',
                     next: 'pop' } ] },
              { token: 'text', regex: '\\s*,\\s*' },
              { token: 'meta.use.php', regex: '(?=;|(?:^\\s*$))', next: 'pop' },
              { defaultToken: 'meta.use.php' } ] },
         { caseInsensitive: true,
           todo: 'fix grouping',
           token: 
            [ 'meta.class.php',
              'storage.modifier.abstract.php',
              'storage.type.class.php',
              'entity.name.type.class.php' ],
           regex: '^\\s*(abstract|final)?\\s*(class)\\s+([a-z0-9_]+)\\s*',
           push: 
            [ { include: '#comments' },
              { caseInsensitive: true,
                todo: 'fix grouping',
                token: [ 'text', 'storage.modifier.extends.php' ],
                regex: '(extends)\\s+',
                push: 
                 [ { caseInsensitive: true,
                     token: 'text',
                     regex: '(?=\\\\?[a-z_0-9]+\\\\)',
                     push: 
                      [ { include: '#namespace' },
                        { caseInsensitive: true,
                          todo: 'fix grouping',
                          token: [ 'text', 'entity.other.inherited-class.php' ],
                          regex: '([a-z_][a-z_0-9]*)?(?=[^a-z0-9_\\\\])',
                          next: 'pop' } ] },
                   { include: '#class-builtin' },
                   { include: '#namespace' },
                   { caseInsensitive: true,
                     token: 'entity.other.inherited-class.php',
                     regex: '[a-z_][a-z_0-9]*' },
                   { caseInsensitive: true,
                     token: 'text',
                     regex: '(?=[^a-z_0-9\\\\])',
                     next: 'pop' },
                   { defaultToken: 'meta.other.inherited-class.php' } ] },
              { caseInsensitive: true,
                todo: 'fix grouping',
                token: [ 'text', 'storage.modifier.implements.php' ],
                regex: '(implements)\\s+',
                push: 
                 [ { include: '#comments' },
                   { caseInsensitive: true,
                     token: 'text',
                     regex: '(?=[a-z0-9_\\\\]+)',
                     push: 
                      [ { caseInsensitive: true,
                          token: 'text',
                          regex: '(?=\\\\?[a-z_0-9]+\\\\)',
                          push: 
                           [ { include: '#namespace' },
                             { caseInsensitive: true,
                               todo: 'fix grouping',
                               token: [ 'text', 'entity.other.inherited-class.php' ],
                               regex: '([a-z_][a-z_0-9]*)?(?=[^a-z0-9_\\\\])',
                               next: 'pop' } ] },
                        { include: '#class-builtin' },
                        { include: '#namespace' },
                        { caseInsensitive: true,
                          token: 'entity.other.inherited-class.php',
                          regex: '[a-z_][a-z_0-9]*' },
                        { caseInsensitive: true,
                          token: 'text',
                          regex: '(?:\\s*(?:,|(?=[^a-z0-9_\\\\\\s]))\\s*)',
                          next: 'pop' },
                        { defaultToken: 'meta.other.inherited-class.php' } ] },
                   { caseInsensitive: true,
                     token: 'text',
                     regex: '(?=[;{])',
                     next: 'pop' } ] },
              { token: 'meta.class.php', regex: '(?=[;{])', next: 'pop' },
              { defaultToken: 'meta.class.php' } ] },
         { caseInsensitive: true,
           token: 'keyword.control.php',
           regex: '\\s*\\b(break|c(ase|ontinue)|d(e(clare|fault)|ie|o)|e(lse(if)?|nd(declare|for(each)?|if|switch|while)|xit)|for(each)?|if|return|switch|use|while)\\b' },
         { caseInsensitive: true,
           todo: 'fix grouping',
           token: [ 'meta.include.php', 'keyword.control.import.include.php' ],
           regex: '\\b((?:require|include)(?:_once)?)\\b\\s*',
           push: 
            [ { include: '#language' },
              { token: 'meta.include.php', regex: '(?=\\s|;|$)', next: 'pop' },
              { defaultToken: 'meta.include.php' } ] },
         { todo: 'fix grouping',
           token: [ 'meta.catch.php', 'keyword.control.exception.catch.php' ],
           regex: '\\b(catch)\\b\\s*\\(\\s*',
           push: 
            [ { include: '#namespace' },
              { todo: 'fix grouping',
                token: 
                 [ 'meta.catch.php',
                   'support.class.exception.php',
                   'variable.other.php',
                   'punctuation.definition.variable.php' ],
                regex: '([A-Za-z_][A-Za-z_0-9]*)\\s*((\\$+)[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*)\\s*\\)',
                next: 'pop' },
              { defaultToken: 'meta.catch.php' } ] },
         { caseInsensitive: true,
           token: 'keyword.control.exception.php',
           regex: '\\b(catch|try|throw|exception)\\b' },
         { caseInsensitive: true,
           todo: 'fix grouping',
           token: 
            [ 'meta.function.closure.php',
              'storage.type.function.php',
              'storage.modifier.reference.php' ],
           regex: '\\b(function)\\s*(&\\s*)?(?=\\()',
           push: 
            [ { todo: 'fix grouping',
                token: [ 'text', 'punctuation.definition.parameters.begin.php' ],
                regex: '(\\()',
                push: 
                 [ { include: '#function-arguments' },
                   { todo: 'fix grouping',
                     token: [ 'text', 'punctuation.definition.parameters.end.php' ],
                     regex: '(\\))',
                     next: 'pop' },
                   { defaultToken: 'meta.function.arguments.php' } ] },
              { caseInsensitive: true,
                todo: 'fix grouping',
                token: 
                 [ 'text',
                   'keyword.other.function.use.php',
                   'punctuation.definition.parameters.begin.php' ],
                regex: '(use)\\s*(\\()',
                push: 
                 [ { todo: 'fix grouping',
                     token: 
                      [ 'meta.function.closure.use.php',
                        'storage.modifier.reference.php',
                        'variable.other.php',
                        'punctuation.definition.variable.php' ],
                     regex: '(\\s*&)?\\s*((\\$+)[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*)\\s*(?=,|\\))' },
                   { todo: 'fix grouping',
                     token: [ 'text', 'punctuation.definition.parameters.end.php' ],
                     regex: '(\\))',
                     next: 'pop' } ] },
              { token: 'meta.function.closure.php', regex: '\\{', next: 'pop' },
              { defaultToken: 'meta.function.closure.php' } ] },
         { caseInsensitive: true,
           todo: 'fix grouping',
           token: 
            [ 'meta.function.php',
              'storage.modifier.php',
              'storage.type.function.php',
              'storage.modifier.reference.php',
              'support.function.magic.php',
              'entity.name.function.php',
              'punctuation.definition.parameters.begin.php' ],
           regex: '\\s*((?:(?:final|abstract|public|private|protected|static)\\s+)*)(function)(?:\\s+|(\\s*&\\s*))(?:(__(?:call|construct|destruct|get|set|isset|unset|tostring|clone|set_state|sleep|wakeup|autoload|invoke|callStatic))|([a-zA-Z0-9_]+))\\s*(\\()',
           push: 
            [ { include: '#function-arguments' },
              { todo: 'fix grouping',
                token: 
                 [ 'meta.function.php',
                   'punctuation.definition.parameters.end.php' ],
                regex: '(\\))',
                next: 'pop' },
              { defaultToken: 'meta.function.php' } ] },
         { include: '#invoke-call' },
         { caseInsensitive: true,
           TODO: 'FIXME: regexp doesn\'t have js equivalent',
           originalRegex: '(?xi)\\s*(?=\r\n\t\t\t\t        [a-z_0-9$\\\\]+(::)\r\n                        (?:\r\n        \t\t\t\t    ([a-z_][a-z_0-9]*)\\s*\\(\r\n        \t\t\t\t    |\r\n        \t\t\t\t    ((\\$+)[a-z_\\x{7f}-\\x{ff}][a-z0-9_\\x{7f}-\\x{ff}]*)\r\n        \t\t\t\t    |\r\n        \t\t\t\t    ([a-z_\\x{7f}-\\x{ff}][a-z0-9_\\x{7f}-\\x{ff}]*)\r\n        \t\t\t\t)?\r\n\t\t\t\t    )',
           token: 'text',
           regex: '(?xi)\\s*(?=\r\n\t\t\t\t        [a-z_0-9$\\\\]+(::)\r\n                        (?:\r\n        \t\t\t\t    ([a-z_][a-z_0-9]*)\\s*\\(\r\n        \t\t\t\t    |\r\n        \t\t\t\t    ((\\$+)[a-z_\\x7f-\\xff][a-z0-9_\\x7f-\\xff]*)\r\n        \t\t\t\t    |\r\n        \t\t\t\t    ([a-z_\\x7f-\\xff][a-z0-9_\\x7f-\\xff]*)\r\n        \t\t\t\t)?\r\n\t\t\t\t    )',
           push: 
            [ { token: 'storage.type.php', regex: '(self|static|parent)\\b' },
              { include: '#class-name' },
              { include: '#variable-name' },
              { todo: 'fix grouping',
                token: 
                 [ 'text',
                   'keyword.operator.class.php',
                   'meta.function-call.static.php',
                   'variable.other.class.php',
                   'punctuation.definition.variable.php',
                   'constant.other.class.php' ],
                regex: '(::)(?:([A-Za-z_][A-Za-z_0-9]*)\\s*\\(|((\\$+)[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*)|([a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*))?',
                next: 'pop' } ] },
         { include: '#variables' },
         { include: '#strings' },
         { todo: 'fix grouping',
           token: 
            [ 'meta.array.empty.php',
              'support.function.construct.php',
              'punctuation.definition.array.begin.php',
              'punctuation.definition.array.end.php' ],
           regex: '(array)(\\()(\\))' },
         { todo: 'fix grouping',
           token: 
            [ 'meta.array.php',
              'support.function.construct.php',
              'punctuation.definition.array.begin.php' ],
           regex: '(array)(\\()',
           push: 
            [ { include: '#language' },
              { token: 'punctuation.definition.array.end.php',
                regex: '\\)',
                next: 'pop' },
              { defaultToken: 'meta.array.php' } ] },
         { caseInsensitive: true,
           todo: 'fix grouping',
           token: [ 'text', 'storage.type.php' ],
           regex: '\\s*\\(\\s*(array|real|double|float|int(eger)?|bool(ean)?|string|object|binary|unset)\\s*\\)' },
         { caseInsensitive: true,
           token: 'storage.type.php',
           regex: '\\b(array|real|double|float|int(eger)?|bool(ean)?|string|class|clone|var|function|interface|parent|self|object)\\b' },
         { caseInsensitive: true,
           token: 'storage.modifier.php',
           regex: '\\b(global|abstract|const|extends|implements|final|p(r(ivate|otected)|ublic)|static)\\b' },
         { include: '#object' },
         { token: 'punctuation.terminator.expression.php', regex: ';' },
         { include: '#heredoc' },
         { token: 'keyword.operator.string.php', regex: '\\.=?' },
         { token: 'keyword.operator.key.php', regex: '=>' },
         { todo: 'fix grouping',
           token: 
            [ 'text',
              'keyword.operator.assignment.php',
              'storage.modifier.reference.php',
              'storage.modifier.reference.php' ],
           regex: '(?:(\\=)(&))|(&(?=[$A-Za-z_]))' },
         { token: 'keyword.operator.error-control.php', regex: '(@)' },
         { token: 'keyword.operator.increment-decrement.php',
           regex: '(\\-\\-|\\+\\+)' },
         { token: 'keyword.operator.arithmetic.php',
           regex: '(\\-|\\+|\\*|/|%)' },
         { caseInsensitive: true,
           token: 'keyword.operator.logical.php',
           regex: '(!|&&|\\|\\|)|\\b(and|or|xor|as)\\b' },
         { include: '#function-call' },
         { token: 'keyword.operator.bitwise.php',
           regex: '<<|>>|~|\\^|&|\\|' },
         { token: 'keyword.operator.comparison.php',
           regex: '(===|==|!==|!=|<=|>=|<>|<|>)' },
         { token: 'keyword.operator.assignment.php', regex: '=' },
         { caseInsensitive: true,
           todo: 'fix grouping',
           token: [ 'text', 'keyword.operator.type.php' ],
           regex: '\\b(instanceof)\\b\\s+(?=[\\\\$a-z_])',
           push: 
            [ { include: '#class-name' },
              { include: '#variable-name' },
              { token: 'text', regex: '(?=[^\\\\$A-Za-z_0-9])', next: 'pop' } ] },
         { include: '#numbers' },
         { include: '#instantiation' },
         { caseInsensitive: true,
           todo: 'fix grouping',
           token: [ 'text', 'keyword.control.goto.php', 'support.other.php' ],
           regex: '(goto)\\s+([a-z_][a-z_0-9]*)' },
         { caseInsensitive: true,
           todo: 'fix grouping',
           token: [ 'text', 'entity.name.goto-label.php' ],
           regex: '^\\s*([a-z_][a-z_0-9]*)\\s*:' },
         { include: '#string-backtick' },
         { token: 'punctuation.section.array.begin.php',
           regex: '\\[',
           push: 
            [ { include: '#language' },
              { token: 'punctuation.section.array.end.php',
                regex: '\\]',
                next: 'pop' } ] },
         { include: '#constants' } ],
      '#namespace': 
       [ { caseInsensitive: true,
           todo: 'fix grouping',
           token: 
            [ 'support.other.namespace.php',
              'variable.language.namespace.php',
              'punctuation.separator.inheritance.php' ],
           regex: '(?:(namespace)|[a-z0-9_]+)?(\\\\)(?=.*?[^a-z_0-9\\\\])',
           push: 
            [ { caseInsensitive: true,
                todo: 'fix grouping',
                token: [ 'text', 'punctuation.separator.inheritance.php' ],
                regex: '(\\\\)' },
              { caseInsensitive: true,
                token: 'support.other.namespace.php',
                regex: '(?=[a-z0-9_]*[^a-z0-9_\\\\])',
                next: 'pop' },
              { defaultToken: 'support.other.namespace.php' } ] } ],
      '#numbers': 
       [ { token: 'constant.numeric.php',
           regex: '\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)\\b' } ],
      '#object': 
       [ { todo: 'fix grouping',
           token: 
            [ 'text',
              'keyword.operator.class.php',
              'punctuation.definition.variable.php' ],
           regex: '(->)(\\$?\\{)',
           push: 
            [ { include: '#language' },
              { todo: 'fix grouping',
                token: [ 'text', 'punctuation.definition.variable.php' ],
                regex: '(\\})',
                next: 'pop' } ] },
         { todo: 'fix grouping',
           token: 
            [ 'text',
              'keyword.operator.class.php',
              'meta.function-call.object.php',
              'variable.other.property.php',
              'punctuation.definition.variable.php' ],
           regex: '(->)(?:([A-Za-z_][A-Za-z_0-9]*)\\s*\\(|((\\$+)?[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*))?' } ],
      '#parameter-default-types': 
       [ { include: '#strings' },
         { include: '#numbers' },
         { include: '#string-backtick' },
         { include: '#variables' },
         { token: 'keyword.operator.key.php', regex: '=>' },
         { token: 'keyword.operator.assignment.php', regex: '=' },
         { token: 'storage.modifier.reference.php',
           regex: '&(?=\\s*\\$)' },
         { todo: 'fix grouping',
           token: 
            [ 'meta.array.php',
              'support.function.construct.php',
              'punctuation.definition.array.begin.php' ],
           regex: '(array)\\s*(\\()',
           push: 
            [ { include: '#parameter-default-types' },
              { token: 'punctuation.definition.array.end.php',
                regex: '\\)',
                next: 'pop' },
              { defaultToken: 'meta.array.php' } ] },
         { include: '#instantiation' },
         { caseInsensitive: true,
           TODO: 'FIXME: regexp doesn\'t have js equivalent',
           originalRegex: '(?xi)\\s*(?=\r\n\t\t\t\t        [a-z_0-9\\\\]+(::)\r\n    \t\t\t\t    ([a-z_\\x{7f}-\\x{ff}][a-z0-9_\\x{7f}-\\x{ff}]*)?\r\n\t\t\t\t    )',
           token: 'text',
           regex: '(?xi)\\s*(?=\r\n\t\t\t\t        [a-z_0-9\\\\]+(::)\r\n    \t\t\t\t    ([a-z_\\x7f-\\xff][a-z0-9_\\x7f-\\xff]*)?\r\n\t\t\t\t    )',
           push: 
            [ { include: '#class-name' },
              { caseInsensitive: true,
                todo: 'fix grouping',
                token: 
                 [ 'text',
                   'keyword.operator.class.php',
                   'constant.other.class.php' ],
                regex: '(::)([a-z_\\x7f-\\xff][a-z0-9_\\x7f-\\xff]*)?',
                next: 'pop' } ] },
         { include: '#constants' } ],
      '#php_doc': 
       [ { token: 'invalid.illegal.missing-asterisk.phpdoc.php',
           regex: '^(?!\\s*\\*).*$\\n?',
           //PHPDocumentor only recognises lines with an asterisk as the first non-whitespaces character
            },
         { todo: 'fix grouping',
           token: 
            [ 'text',
              'keyword.other.phpdoc.php',
              'text',
              'storage.modifier.php',
              'invalid.illegal.wrong-access-type.phpdoc.php' ],
           regex: '^\\s*\\*\\s*(@access)\\s+((public|private|protected)|(.+))\\s*$' },
         { TODO: 'FIXME: regexp doesn\'t have js equivalent',
           originalRegex: '((https?|s?ftp|ftps|file|smb|afp|nfs|(x-)?man|gopher|txmt)://|mailto:)[-:@a-zA-Z0-9_.~%+/?=&#]+(?<![.?:])',
           token: 'markup.underline.link.php',
           regex: '((https?|s?ftp|ftps|file|smb|afp|nfs|(x-)?man|gopher|txmt)://|mailto:)[-:@a-zA-Z0-9_.~%+/?=&#]+(?<![.?:])' },
         { caseInsensitive: true,
           todo: 'fix grouping',
           token: 
            [ 'text',
              'keyword.other.phpdoc.php',
              'markup.underline.link.php' ],
           regex: '(@xlink)\\s+(.+)\\s*$' },
         { caseInsensitive: true,
           token: 'keyword.other.phpdoc.php',
           regex: '\\@(a(bstract|uthor)|c(ategory|opyright)|example|global|internal|li(cense|nk)|pa(ckage|ram)|return|s(ee|ince|tatic|ubpackage)|t(hrows|odo)|v(ar|ersion)|uses|deprecated|final)\\b' },
         { caseInsensitive: true,
           todo: 'fix grouping',
           token: [ 'meta.tag.inline.phpdoc.php', 'keyword.other.phpdoc.php' ],
           regex: '\\{(@(link)).+?\\}' } ],
      '#python': 
       [ { token: 'source.python.embedded.html',
           regex: '(?:^\\s*)<\\?python(?!.*\\?>)',
           push: 
            [ { include: 'source.python' },
              { TODO: 'FIXME: regexp doesn\'t have js equivalent',
                originalRegex: '\\?>(?:\\s*$\\n)?',
                token: 'source.python.embedded.html',
                regex: '\\?>(?:\\s*$$?',
                next: 'pop' },
              { defaultToken: 'source.python.embedded.html' } ] } ],
      '#regex-double-quoted': 
       [ { TODO: 'FIXME: regexp doesn\'t have js equivalent',
           originalRegex: '(?x)"/ (?= (\\\\.|[^"/])++/[imsxeADSUXu]*" )',
           token: 'punctuation.definition.string.begin.php',
           regex: '"/(?=(\\\\.|[^"/])++/[imsxeADSUXu]*")',
           push: 
            [ { token: 'constant.character.escape.regex.php',
                regex: '(\\\\){1,2}[.$^\\[\\]{}]',
                //Escaped from the regexp – there can also be 2 backslashes (since 1 will escape the first)
                 },
              { include: '#interpolation' },
              { todo: 'fix grouping',
                token: 
                 [ 'string.regexp.arbitrary-repitition.php',
                   'punctuation.definition.arbitrary-repitition.php',
                   'string.regexp.arbitrary-repitition.php',
                   'punctuation.definition.arbitrary-repitition.php' ],
                regex: '(\\{)\\d+(,\\d+)?(\\})' },
              { token: 'punctuation.definition.character-class.php',
                regex: '\\[(?:\\^?\\])?',
                push: 
                 [ { include: '#interpolation' },
                   { token: 'punctuation.definition.character-class.php',
                     regex: '\\]',
                     next: 'pop' },
                   { defaultToken: 'string.regexp.character-class.php' } ] },
              { token: 'keyword.operator.regexp.php', regex: '[$^+*]' },
              { token: 'punctuation.definition.string.end.php',
                regex: '(/)([imsxeADSUXu]*)(")',
                next: 'pop' },
              { defaultToken: 'string.regexp.double-quoted.php' } ] } ],
      '#regex-single-quoted': 
       [ { TODO: 'FIXME: regexp doesn\'t have js equivalent',
           originalRegex: '(?x)\'/ (?= (\\\\.|[^\'/])++/[imsxeADSUXu]*\' )',
           token: 'punctuation.definition.string.begin.php',
           regex: '\'/(?=(\\\\.|[^\'/])++/[imsxeADSUXu]*\')',
           push: 
            [ { todo: 'fix grouping',
                token: 
                 [ 'string.regexp.arbitrary-repitition.php',
                   'punctuation.definition.arbitrary-repitition.php',
                   'string.regexp.arbitrary-repitition.php',
                   'punctuation.definition.arbitrary-repitition.php' ],
                regex: '(\\{)\\d+(,\\d+)?(\\})' },
              { token: 'constant.character.escape.regex.php',
                regex: '(\\\\){1,2}[.$^\\[\\]{}]',
                //Escaped from the regexp – there can also be 2 backslashes (since 1 will escape the first)
                 },
              { token: 'constant.character.escape.php',
                regex: '\\\\{1,2}[\\\\\']',
                //Escaped from the PHP string – there can also be 2 backslashes (since 1 will escape the first)
                 },
              { token: 'punctuation.definition.character-class.php',
                regex: '\\[(?:\\^?\\])?',
                push: 
                 [ { token: 'constant.character.escape.php',
                     regex: '\\\\[\\\\\'\\[\\]]' },
                   { token: 'punctuation.definition.character-class.php',
                     regex: '\\]',
                     next: 'pop' },
                   { defaultToken: 'string.regexp.character-class.php' } ] },
              { token: 'keyword.operator.regexp.php', regex: '[$^+*]' },
              { token: 'punctuation.definition.string.end.php',
                regex: '(/)([imsxeADSUXu]*)(\')',
                next: 'pop' },
              { defaultToken: 'string.regexp.single-quoted.php' } ] } ],
      '#smarty': 
       [ { caseInsensitive: true,
           todo: 'fix grouping',
           token: 
            [ 'text',
              'source.smarty.embedded.html',
              'support.function.built-in.smarty' ],
           regex: '(\\{(literal)\\})',
           push: 
            [ { caseInsensitive: true,
                todo: 'fix grouping',
                token: 
                 [ 'text',
                   'source.smarty.embedded.html',
                   'support.function.built-in.smarty' ],
                regex: '(\\{/(literal)\\})',
                next: 'pop' } ] },
         { token: 'source.smarty.embedded.html',
           regex: '{{|{',
           push: 
            [ { include: 'source.smarty' },
              { token: 'source.smarty.embedded.html',
                regex: '}}|}',
                next: 'pop' },
              { defaultToken: 'source.smarty.embedded.html' } ] } ],
      '#sql-string-double-quoted': 
       [ { token: 'punctuation.definition.string.begin.php',
           regex: '"\\s*(?=(SELECT|INSERT|UPDATE|DELETE|CREATE|REPLACE|ALTER)\\b)',
           push: 
            [ { token: 'comment.line.number-sign.sql',
                regex: '#(\\\\"|[^"])*(?="|$\\n?)' },
              { token: 'comment.line.double-dash.sql',
                regex: '--(\\\\"|[^"])*(?="|$\\n?)' },
              { token: 'constant.character.escape.php',
                regex: '\\\\[\\\\"`\']' },
              { token: 'string.quoted.single.unclosed.sql',
                regex: '\'(?=((\\\\\')|[^\'"])*("|$))',
                //Unclosed strings must be captured to avoid them eating the remainder of the PHP script\r
                //Sample case: $sql = "SELECT * FROM bar WHERE foo = \'" . $variable . "\'"
                 },
              { token: 'string.quoted.other.backtick.unclosed.sql',
                regex: '`(?=((\\\\`)|[^`"])*("|$))',
                //Unclosed strings must be captured to avoid them eating the remainder of the PHP script\r
                //Sample case: $sql = "SELECT * FROM bar WHERE foo = \'" . $variable . "\'"
                 },
              { token: 'string.quoted.single.sql',
                regex: '\'',
                push: 
                 [ { include: '#interpolation' },
                   { token: 'string.quoted.single.sql', regex: '\'', next: 'pop' },
                   { defaultToken: 'string.quoted.single.sql' } ] },
              { token: 'string.quoted.other.backtick.sql',
                regex: '`',
                push: 
                 [ { include: '#interpolation' },
                   { token: 'string.quoted.other.backtick.sql',
                     regex: '`',
                     next: 'pop' },
                   { defaultToken: 'string.quoted.other.backtick.sql' } ] },
              { include: '#interpolation' },
              { include: 'source.sql' },
              { token: 'punctuation.definition.string.end.php',
                regex: '"',
                next: 'pop' },
              { defaultToken: 'string.quoted.double.sql.php' } ] } ],
      '#sql-string-single-quoted': 
       [ { token: 'punctuation.definition.string.begin.php',
           regex: '\'\\s*(?=(SELECT|INSERT|UPDATE|DELETE|CREATE|REPLACE|ALTER)\\b)',
           push: 
            [ { token: 'comment.line.number-sign.sql',
                regex: '#(\\\\\'|[^\'])*(?=\'|$\\n?)' },
              { token: 'comment.line.double-dash.sql',
                regex: '--(\\\\\'|[^\'])*(?=\'|$\\n?)' },
              { token: 'constant.character.escape.php',
                regex: '\\\\[\\\\\'`"]' },
              { token: 'string.quoted.other.backtick.unclosed.sql',
                regex: '`(?=((\\\\`)|[^`\'])*(\'|$))',
                //Unclosed strings must be captured to avoid them eating the remainder of the PHP script\r
                //Sample case: $sql = "SELECT * FROM bar WHERE foo = \'" . $variable . "\'"
                 },
              { token: 'string.quoted.double.unclosed.sql',
                regex: '"(?=((\\\\")|[^"\'])*(\'|$))',
                //Unclosed strings must be captured to avoid them eating the remainder of the PHP script\r
                //Sample case: $sql = "SELECT * FROM bar WHERE foo = \'" . $variable . "\'"
                 },
              { include: 'source.sql' },
              { token: 'punctuation.definition.string.end.php',
                regex: '\'',
                next: 'pop' },
              { defaultToken: 'string.quoted.single.sql.php' } ] } ],
      '#string-backtick': 
       [ { token: 'punctuation.definition.string.begin.php',
           regex: '`',
           push: 
            [ { token: 'constant.character.escape.php', regex: '\\\\.' },
              { include: '#interpolation' },
              { token: 'punctuation.definition.string.end.php',
                regex: '`',
                next: 'pop' },
              { defaultToken: 'string.interpolated.php' } ] } ],
      '#string-double-quoted': 
       [ { token: 'punctuation.definition.string.begin.php',
           regex: '"',
           push: 
            [ { include: '#interpolation' },
              { token: 'punctuation.definition.string.end.php',
                regex: '"',
                next: 'pop' },
              { defaultToken: 'string.quoted.double.php' } ],
           //This contentName is just to allow the usage of “select scope” to select the string contents first, then the string with quotes
            } ],
      '#string-single-quoted': 
       [ { token: 'punctuation.definition.string.begin.php',
           regex: '\'',
           push: 
            [ { token: 'constant.character.escape.php',
                regex: '\\\\[\\\\\']' },
              { token: 'punctuation.definition.string.end.php',
                regex: '\'',
                next: 'pop' },
              { defaultToken: 'string.quoted.single.php' } ] } ],
      '#strings': 
       [ { include: '#regex-double-quoted' },
         { include: '#sql-string-double-quoted' },
         { include: '#string-double-quoted' },
         { include: '#regex-single-quoted' },
         { include: '#sql-string-single-quoted' },
         { include: '#string-single-quoted' } ],
      '#support': 
       [ { caseInsensitive: true,
           token: 'support.function.apc.php',
           regex: '\\bapc_(s(tore|ma_info)|c(ompile_file|lear_cache|a(s|che_info))|inc|de(c|fine_constants|lete(_file)?)|exists|fetch|load_constants|add|bin_(dump(file)?|load(file)?))\\b' },
         { caseInsensitive: true,
           token: 'support.function.array.php',
           regex: '\\b(s(huffle|izeof|ort)|n(ext|at(sort|casesort))|c(o(unt|mpact)|urrent)|in_array|u(sort|ksort|asort)|p(os|rev)|e(nd|ach|xtract)|k(sort|ey|rsort)|list|a(sort|r(sort|ray(_(s(hift|um|plice|earch|lice)|c(h(unk|ange_key_case)|o(unt_values|mbine))|intersect(_(u(key|assoc)|key|assoc))?|diff(_(u(key|assoc)|key|assoc))?|u(n(shift|ique)|intersect(_(uassoc|assoc))?|diff(_(uassoc|assoc))?)|p(op|ush|ad|roduct)|values|key(s|_exists)|f(il(ter|l(_keys)?)|lip)|walk(_recursive)?|r(e(duce|place(_recursive)?|verse)|and)|m(ultisort|erge(_recursive)?|ap)))?))|r(sort|eset|ange))\\b' },
         { caseInsensitive: true,
           token: 'support.function.basic_functions.php',
           regex: '\\b(s(how_source|ys_getloadavg|leep)|highlight_(string|file)|con(stant|nection_(status|timeout|aborted))|time_(sleep_until|nanosleep)|ignore_user_abort|d(ie|efine(d)?)|u(sleep|n(iqid|pack))|__halt_compiler|p(hp_(strip_whitespace|check_syntax)|ack)|e(val|xit)|get_browser)\\b' },
         { caseInsensitive: true,
           token: 'support.function.bcmath.php',
           regex: '\\bbc(s(cale|ub|qrt)|comp|div|pow(mod)?|add|m(od|ul))\\b' },
         { caseInsensitive: true,
           token: 'support.function.bz2.php',
           regex: '\\bbz(c(ompress|lose)|open|decompress|err(str|no|or)|flush|write|read)\\b' },
         { caseInsensitive: true,
           token: 'support.function.calendar.php',
           regex: '\\b(GregorianToJD|cal_(to_jd|info|days_in_month|from_jd)|unixtojd|jdto(unix|jewish)|easter_da(ys|te)|J(ulianToJD|ewishToJD|D(MonthName|To(Gregorian|Julian|French)|DayOfWeek))|FrenchToJD)\\b' },
         { caseInsensitive: true,
           token: 'support.function.classobj.php',
           regex: '\\b(c(lass_(exists|alias)|all_user_method(_array)?)|i(s_(subclass_of|a)|nterface_exists)|property_exists|get_(c(lass(_(vars|methods))?|alled_class)|object_vars|declared_(classes|interfaces)|parent_class)|method_exists)\\b' },
         { caseInsensitive: true,
           token: 'support.function.com.php',
           regex: '\\b(com_(set|create_guid|i(senum|nvoke)|pr(int_typeinfo|op(set|put|get))|event_sink|load(_typelib)?|addref|release|get(_active_object)?|message_pump)|variant_(s(ub|et(_type)?)|n(ot|eg)|c(a(st|t)|mp)|i(nt|div|mp)|or|d(iv|ate_(to_timestamp|from_timestamp))|pow|eqv|fix|a(nd|dd|bs)|round|get_type|xor|m(od|ul)))\\b' },
         { caseInsensitive: true,
           token: 'support.function.ctype.php',
           regex: '\\bctype_(space|cntrl|digit|upper|p(unct|rint)|lower|al(num|pha)|graph|xdigit)\\b' },
         { caseInsensitive: true,
           token: 'support.function.curl.php',
           regex: '\\bcurl_(setopt(_array)?|c(opy_handle|lose)|init|e(rr(no|or)|xec)|version|getinfo|multi_(select|close|in(it|fo_read)|exec|add_handle|remove_handle|getcontent))\\b' },
         { caseInsensitive: true,
           token: 'support.function.datetime.php',
           regex: '\\b(str(totime|ptime|ftime)|checkdate|time(zone_(name_(from_abbr|get)|transitions_get|identifiers_list|o(pen|ffset_get)|version_get|location_get|abbreviations_list))?|idate|date(_(su(n(set|_info|rise)|b)|create(_from_format)?|time(stamp_(set|get)|zone_(set|get)|_set)|i(sodate_set|nterval_(create_from_date_string|format))|offset_get|d(iff|efault_timezone_(set|get)|ate_set)|parse(_from_format)?|format|add|get_last_errors|modify))?|localtime|g(et(timeofday|date)|m(strftime|date|mktime))|m(icrotime|ktime))\\b' },
         { caseInsensitive: true,
           token: 'support.function.dba.php',
           regex: '\\bdba_(sync|handlers|nextkey|close|insert|op(timize|en)|delete|popen|exists|key_split|f(irstkey|etch)|list|replace)\\b' },
         { caseInsensitive: true,
           token: 'support.function.dbx.php',
           regex: '\\bdbx_(sort|c(o(nnect|mpare)|lose)|e(scape_string|rror)|query|fetch_row)\\b' },
         { caseInsensitive: true,
           token: 'support.function.dir.php',
           regex: '\\b(scandir|c(h(dir|root)|losedir)|opendir|dir|re(winddir|addir)|getcwd)\\b' },
         { caseInsensitive: true,
           token: 'support.function.domxml.php',
           regex: '\\b(domxml_(new_doc|open_(file|mem)|version|x(slt_(stylesheet(_(doc|file))?|version)|mltree))|xp(tr_(new_context|eval)|ath_(new_context|eval(_expression)?|register_ns(_auto)?)))\\b' },
         { caseInsensitive: true,
           token: 'support.function.dotnet.php',
           regex: '\\bdotnet_load\\b' },
         { caseInsensitive: true,
           token: 'support.function.enchant.php',
           regex: '\\benchant_(dict_(s(tore_replacement|uggest)|check|is_in_session|describe|quick_check|add_to_(session|personal)|get_error)|broker_(set_ordering|init|d(ict_exists|escribe)|free(_dict)?|list_dicts|request_(dict|pwl_dict)|get_error))\\b' },
         { caseInsensitive: true,
           token: 'support.function.ereg.php',
           regex: '\\b(s(plit(i)?|ql_regcase)|ereg(i(_replace)?|_replace)?)\\b' },
         { caseInsensitive: true,
           token: 'support.function.errorfunc.php',
           regex: '\\b(set_e(rror_handler|xception_handler)|trigger_error|debug_(print_backtrace|backtrace)|user_error|error_(log|reporting|get_last)|restore_e(rror_handler|xception_handler))\\b' },
         { caseInsensitive: true,
           token: 'support.function.exec.php',
           regex: '\\b(s(hell_exec|ystem)|p(assthru|roc_(nice|close|terminate|open|get_status))|e(scapeshell(cmd|arg)|xec))\\b' },
         { caseInsensitive: true,
           token: 'support.function.exif.php',
           regex: '\\b(exif_(t(humbnail|agname)|imagetype|read_data)|read_exif_data)\\b' },
         { caseInsensitive: true,
           token: 'support.function.file.php',
           regex: '\\b(s(ymlink|tat|et_file_buffer)|c(h(own|grp|mod)|opy|learstatcache)|t(ouch|empnam|mpfile)|is_(dir|uploaded_file|executable|file|writ(eable|able)|link|readable)|d(i(sk(_(total_space|free_space)|freespace)|rname)|elete)|u(nlink|mask)|p(close|open|a(thinfo|rse_ini_(string|file)))|f(s(canf|tat|eek)|nmatch|close|t(ell|runcate)|ile(size|ctime|type|inode|owner|_(put_contents|exists|get_contents)|perms|atime|group|mtime)?|open|p(ut(s|csv)|assthru)|eof|flush|write|lock|read|get(s(s)?|c(sv)?))|l(stat|ch(own|grp)|ink(info)?)|r(e(name|wind|a(d(file|link)|lpath(_cache_(size|get))?))|mdir)|glob|m(ove_uploaded_file|kdir)|basename)\\b' },
         { caseInsensitive: true,
           token: 'support.function.fileinfo.php',
           regex: '\\b(finfo_(set_flags|close|open|file|buffer)|mime_content_type)\\b' },
         { caseInsensitive: true,
           token: 'support.function.filter.php',
           regex: '\\bfilter_(has_var|i(nput(_array)?|d)|var(_array)?|list)\\b' },
         { caseInsensitive: true,
           token: 'support.function.funchand.php',
           regex: '\\b(c(all_user_func(_array)?|reate_function)|unregister_tick_function|f(orward_static_call(_array)?|unc(tion_exists|_(num_args|get_arg(s)?)))|register_(shutdown_function|tick_function)|get_defined_functions)\\b' },
         { caseInsensitive: true,
           token: 'support.function.gettext.php',
           regex: '\\b(ngettext|textdomain|d(ngettext|c(ngettext|gettext)|gettext)|gettext|bind(textdomain|_textdomain_codeset))\\b' },
         { caseInsensitive: true,
           token: 'support.function.gmp.php',
           regex: '\\bgmp_(s(can(1|0)|trval|ign|ub|etbit|qrt(rem)?)|hamdist|ne(g|xtprime)|c(om|lrbit|mp)|testbit|in(tval|it|vert)|or|div(_(q(r)?|r)|exact)?|jacobi|p(o(pcount|w(m)?)|erfect_square|rob_prime)|fact|legendre|a(nd|dd|bs)|random|gcd(ext)?|xor|m(od|ul))\\b' },
         { caseInsensitive: true,
           token: 'support.function.hash.php',
           regex: '\\bhash(_(hmac(_file)?|copy|init|update(_(stream|file))?|fi(nal|le)|algos))?\\b' },
         { caseInsensitive: true,
           token: 'support.function.http.php',
           regex: '\\b(http_(s(upport|end_(st(atus|ream)|content_(type|disposition)|data|file|last_modified))|head|negotiate_(c(harset|ontent_type)|language)|c(hunked_decode|ache_(etag|last_modified))|throttle|inflate|d(eflate|ate)|p(ost_(data|fields)|ut_(stream|data|file)|ersistent_handles_(c(ount|lean)|ident)|arse_(headers|cookie|params|message))|re(direct|quest(_(method_(name|unregister|exists|register)|body_encode))?)|get(_request_(headers|body(_stream)?))?|match_(etag|request_header|modified)|build_(str|cookie|url))|ob_(inflatehandler|deflatehandler|etaghandler))\\b' },
         { caseInsensitive: true,
           token: 'support.function.iconv.php',
           regex: '\\b(iconv(_(s(tr(pos|len|rpos)|ubstr|et_encoding)|get_encoding|mime_(decode(_headers)?|encode)))?|ob_iconv_handler)\\b' },
         { caseInsensitive: true,
           token: 'support.function.iisfunc.php',
           regex: '\\biis_(s(t(op_serv(ice|er)|art_serv(ice|er))|et_(s(cript_map|erver_rights)|dir_security|app_settings))|add_server|remove_server|get_(s(cript_map|erv(ice_state|er_(rights|by_(comment|path))))|dir_security))\\b' },
         { caseInsensitive: true,
           token: 'support.function.image.php',
           regex: '\\b(i(ptc(parse|embed)|mage(s(y|tring(up)?|et(style|t(hickness|ile)|pixel|brush)|avealpha|x)|c(har(up)?|o(nvolution|py(res(ized|ampled)|merge(gray)?)?|lor(s(total|et|forindex)|closest(hwb|alpha)?|transparent|deallocate|exact(alpha)?|a(t|llocate(alpha)?)|resolve(alpha)?|match))|reate(truecolor|from(string|jpeg|png|wbmp|g(if|d(2(part)?)?)|x(pm|bm)))?)|t(ypes|tf(text|bbox)|ruecolortopalette)|i(struecolor|nterlace)|2wbmp|d(estroy|ashedline)|jpeg|_type_to_(extension|mime_type)|p(s(slantfont|text|e(ncodefont|xtendfont)|freefont|loadfont|bbox)|ng|olygon|alettecopy)|ellipse|f(t(text|bbox)|il(ter|l(toborder|ed(polygon|ellipse|arc|rectangle))?)|ont(height|width))|wbmp|l(ine|oadfont|ayereffect)|a(ntialias|lphablending|rc)|r(otate|ectangle)|g(if|d(2)?|ammacorrect|rab(screen|window))|xbm))|jpeg2wbmp|png2wbmp|g(d_info|etimagesize))\\b' },
         { caseInsensitive: true,
           token: 'support.function.info.php',
           regex: '\\b(s(ys_get_temp_dir|et_(time_limit|include_path|magic_quotes_runtime))|ini_(set|alter|restore|get(_all)?)|zend_(thread_id|version|logo_guid)|dl|p(hp(credits|info|_(sapi_name|ini_(scanned_files|loaded_file)|uname|logo_guid)|version)|utenv)|extension_loaded|version_compare|assert(_options)?|restore_include_path|g(c_(collect_cycles|disable|enable(d)?)|et(opt|_(c(urrent_user|fg_var)|include(d_files|_path)|defined_constants|extension_funcs|loaded_extensions|required_files|magic_quotes_(runtime|gpc))|env|lastmod|rusage|my(inode|uid|pid|gid)))|m(emory_get_(usage|peak_usage)|a(in|gic_quotes_runtime)))\\b' },
         { caseInsensitive: true,
           token: 'support.function.interbase.php',
           regex: '\\bibase_(se(t_event_handler|rv(ice_(detach|attach)|er_info))|n(um_(params|fields)|ame_result)|c(o(nnect|mmit(_ret)?)|lose)|t(imefmt|rans)|d(elete_user|rop_db|b_info)|p(connect|aram_info|repare)|e(rr(code|msg)|xecute)|query|f(ield_info|etch_(object|assoc|row)|ree_(event_handler|query|result))|wait_event|a(dd_user|ffected_rows)|r(ollback(_ret)?|estore)|gen_id|m(odify_user|aintain_db)|b(lob_(c(lose|ancel|reate)|i(nfo|mport)|open|echo|add|get)|ackup))\\b' },
         { caseInsensitive: true,
           token: 'support.function.intl.php',
           regex: '\\b(n(ormalizer_(normalize|is_normalized)|umfmt_(set_(symbol|text_attribute|pattern|attribute)|create|parse(_currency)?|format(_currency)?|get_(symbol|text_attribute|pattern|error_(code|message)|locale|attribute)))|collator_(s(ort(_with_sort_keys)?|et_(strength|attribute))|c(ompare|reate)|asort|get_(s(trength|ort_key)|error_(code|message)|locale|attribute))|transliterator_(create(_(inverse|from_rules))?|transliterate|list_ids|get_error_(code|message))|i(ntl_(is_failure|error_name|get_error_(code|message))|dn_to_(u(nicode|tf8)|ascii))|datefmt_(set_(calendar|timezone_id|pattern|lenient)|create|is_lenient|parse|format|localtime|get_(calendar|time(type|zone_id)|datetype|pattern|error_(code|message)|locale))|locale_(set_default|compose|parse|filter_matches|lookup|accept_from_http|get_(script|d(isplay_(script|name|variant|language|region)|efault)|primary_language|keywords|all_variants|region))|resourcebundle_(c(ount|reate)|locales|get(_error_(code|message))?)|grapheme_(s(tr(str|i(str|pos)|pos|len|r(ipos|pos))|ubstr)|extract)|msgfmt_(set_pattern|create|parse(_message)?|format(_message)?|get_(pattern|error_(code|message)|locale)))\\b' },
         { caseInsensitive: true,
           token: 'support.function.json.php',
           regex: '\\bjson_(decode|encode|last_error)\\b' },
         { caseInsensitive: true,
           token: 'support.function.ldap.php',
           regex: '\\bldap_(s(tart_tls|ort|e(t_(option|rebind_proc)|arch)|asl_bind)|next_(entry|attribute|reference)|c(o(nnect|unt_entries|mpare)|lose)|t61_to_8859|d(n2ufn|elete)|8859_to_t61|unbind|parse_re(sult|ference)|e(rr(no|2str|or)|xplode_dn)|f(irst_(entry|attribute|reference)|ree_result)|list|add|re(name|ad)|get_(option|dn|entries|values(_len)?|attributes)|mod(ify|_(del|add|replace))|bind)\\b' },
         { caseInsensitive: true,
           token: 'support.function.libxml.php',
           regex: '\\blibxml_(set_streams_context|clear_errors|disable_entity_loader|use_internal_errors|get_(errors|last_error))\\b' },
         { caseInsensitive: true,
           token: 'support.function.mail.php',
           regex: '\\b(ezmlm_hash|mail)\\b' },
         { caseInsensitive: true,
           token: 'support.function.math.php',
           regex: '\\b(s(in(h)?|qrt|rand)|h(ypot|exdec)|c(os(h)?|eil)|tan(h)?|is_(nan|infinite|finite)|octdec|de(c(hex|oct|bin)|g2rad)|p(i|ow)|exp(m1)?|f(loor|mod)|l(cg_value|og(1(p|0))?)|a(sin(h)?|cos(h)?|tan(h|2)?|bs)|r(ound|a(nd|d2deg))|getrandmax|m(t_(srand|rand|getrandmax)|in|ax)|b(indec|ase_convert))\\b' },
         { caseInsensitive: true,
           token: 'support.function.mbstring.php',
           regex: '\\bmb_(s(tr(str|cut|to(upper|lower)|i(str|pos|mwidth)|pos|width|len|r(chr|i(chr|pos)|pos))|ubst(itute_character|r(_count)?)|plit|end_mail)|http_(input|output)|c(heck_encoding|onvert_(case|encoding|variables|kana))|internal_encoding|output_handler|de(code_(numericentity|mimeheader)|tect_(order|encoding))|p(arse_str|referred_mime_name)|e(ncod(ing_aliases|e_(numericentity|mimeheader))|reg(i(_replace)?|_(search(_(setpos|init|pos|regs|get(pos|regs)))?|replace|match))?)|l(ist_encodings|anguage)|regex_(set_options|encoding)|get_info)\\b' },
         { caseInsensitive: true,
           token: 'support.function.mcrypt.php',
           regex: '\\bm(crypt_(c(fb|reate_iv|bc)|ofb|decrypt|e(nc(_(self_test|is_block_(algorithm(_mode)?|mode)|get_(supported_key_sizes|iv_size|key_size|algorithms_name|modes_name|block_size))|rypt)|cb)|list_(algorithms|modes)|ge(neric(_(init|deinit|end))?|t_(cipher_name|iv_size|key_size|block_size))|module_(self_test|close|is_block_(algorithm(_mode)?|mode)|open|get_(supported_key_sizes|algo_(key_size|block_size))))|decrypt_generic)\\b' },
         { caseInsensitive: true,
           token: 'support.function.memcache.php',
           regex: '\\bmemcache_debug\\b' },
         { caseInsensitive: true,
           token: 'support.function.mhash.php',
           regex: '\\bmhash(_(count|keygen_s2k|get_(hash_name|block_size)))?\\b' },
         { caseInsensitive: true,
           token: 'support.function.mongo.php',
           regex: '\\bbson_(decode|encode)\\b' },
         { caseInsensitive: true,
           token: 'support.function.mysql.php',
           regex: '\\bmysql_(s(tat|e(t_charset|lect_db))|num_(fields|rows)|c(onnect|l(ient_encoding|ose)|reate_db)|t(hread_id|ablename)|in(sert_id|fo)|d(ata_seek|rop_db|b_(name|query))|unbuffered_query|p(connect|ing)|e(scape_string|rr(no|or))|query|f(ield_(seek|name|t(ype|able)|flags|len)|etch_(object|field|lengths|a(ssoc|rray)|row)|ree_result)|list_(tables|dbs|processes|fields)|affected_rows|re(sult|al_escape_string)|get_(server_info|host_info|client_info|proto_info))\\b' },
         { caseInsensitive: true,
           token: 'support.function.mysqli.php',
           regex: '\\bmysqli_(s(sl_set|t(ore_result|at|mt_(s(tore_result|end_long_data|qlstate)|num_rows|close|in(sert_id|it)|data_seek|p(aram_count|repare)|e(rr(no|or)|xecute)|f(ield_count|etch|ree_result)|a(ttr_(set|get)|ffected_rows)|res(ult_metadata|et)|get_(warnings|result)|bind_(param|result)))|e(nd_(query|long_data)|t_(charset|opt|local_infile_(handler|default))|lect_db)|qlstate|lave_query)|n(um_(fields|rows)|ext_result)|c(ha(nge_user|racter_set_name)|o(nnect(_err(no|or))?|mmit)|l(ient_encoding|ose))|thread_(safe|id)|in(sert_id|it|fo)|options|d(isable_r(pl_parse|eads_from_master)|ump_debug_info|ebug|ata_seek)|use_result|p(ing|oll|aram_count|repare)|e(scape_string|nable_r(pl_parse|eads_from_master)|rr(no|or)|xecute|mbedded_server_(start|end))|kill|query|f(ield_(seek|count|tell)|etch(_(object|field(s|_direct)?|lengths|a(ssoc|ll|rray)|row))?|ree_result)|warning_count|a(utocommit|ffected_rows)|r(ollback|pl_(p(arse_enabled|robe)|query_type)|e(port|a(p_async_query|l_(connect|escape_string|query))))|get_(server_(info|version)|host_info|c(harset|onnection_stats|lient_(stats|info|version)|ache_stats)|proto_info|warnings|metadata)|m(ore_results|ulti_query|aster_query)|bind_(param|result))\\b' },
         { caseInsensitive: true,
           token: 'support.function.mysqlnd-ms.php',
           regex: '\\bmysqlnd_ms_(set_user_pick_server|query_is_select|get_stats)\\b' },
         { caseInsensitive: true,
           token: 'support.function.mysqlnd-qc.php',
           regex: '\\bmysqlnd_qc_(set_user_handlers|c(hange_handler|lear_cache)|get_(handler|c(ore_stats|ache_info)|query_trace_log))\\b' },
         { caseInsensitive: true,
           token: 'support.function.network.php',
           regex: '\\b(s(yslog|ocket_(set_(timeout|blocking)|get_status)|et(cookie|rawcookie))|header(s_(sent|list)|_remove)?|c(heckdnsrr|loselog)|i(net_(ntop|pton)|p2long)|openlog|d(ns_(check_record|get_(record|mx))|efine_syslog_variables)|pfsockopen|fsockopen|long2ip|get(servby(name|port)|host(name|by(name(l)?|addr))|protobyn(umber|ame)|mxrr))\\b' },
         { caseInsensitive: true,
           token: 'support.function.nsapi.php',
           regex: '\\bnsapi_(virtual|re(sponse_headers|quest_headers))\\b' },
         { caseInsensitive: true,
           token: 'support.function.objaggregation.php',
           regex: '\\b(deaggregate|aggregat(ion_info|e(_(info|properties(_by_(list|regexp))?|methods(_by_(list|regexp))?))?))\\b' },
         { caseInsensitive: true,
           token: 'support.function.oci8.php',
           regex: '\\boci(s(tatementtype|e(tprefetch|rverversion)|avelob(file)?)|n(umcols|ew(c(ollection|ursor)|descriptor)|logon)|c(o(l(umn(s(cale|ize)|name|type(raw)?|isnull|precision)|l(size|trim|a(ssign(elem)?|ppend)|getelem|max))|mmit)|loselob|ancel)|internaldebug|definebyname|_(s(tatement_type|e(t_(client_i(nfo|dentifier)|prefetch|edition|action|module_name)|rver_version))|n(um_(fields|rows)|ew_(c(o(nnect|llection)|ursor)|descriptor))|c(o(nnect|mmit)|l(ient_version|ose)|ancel)|internal_debug|define_by_name|p(connect|a(ssword_change|rse))|e(rror|xecute)|f(ield_(s(cale|ize)|name|type(_raw)?|is_null|precision)|etch(_(object|a(ssoc|ll|rray)|row))?|ree_statement)|lob_(copy|is_equal)|r(ollback|esult)|bind_(array_by_name|by_name))|p(logon|arse)|e(rror|xecute)|f(etch(statement|into)?|ree(statement|c(ollection|ursor)|desc))|write(temporarylob|lobtofile)|lo(adlob|go(n|ff))|r(o(wcount|llback)|esult)|bindbyname)\\b' },
         { caseInsensitive: true,
           token: 'support.function.openssl.php',
           regex: '\\bopenssl_(s(ign|eal)|c(sr_(sign|new|export(_to_file)?|get_(subject|public_key))|ipher_iv_length)|open|d(h_compute_key|igest|ecrypt)|p(ublic_(decrypt|encrypt)|k(cs(12_(export(_to_file)?|read)|7_(sign|decrypt|encrypt|verify))|ey_(new|export(_to_file)?|free|get_(details|p(ublic|rivate))))|rivate_(decrypt|encrypt))|e(ncrypt|rror_string)|verify|free_key|random_pseudo_bytes|get_(cipher_methods|p(ublickey|rivatekey)|md_methods)|x509_(check(_private_key|purpose)|parse|export(_to_file)?|free|read))\\b' },
         { caseInsensitive: true,
           token: 'support.function.output.php',
           regex: '\\b(o(utput_(add_rewrite_var|reset_rewrite_vars)|b_(start|clean|implicit_flush|end_(clean|flush)|flush|list_handlers|g(zhandler|et_(status|c(ontents|lean)|flush|le(ngth|vel)))))|flush)\\b' },
         { caseInsensitive: true,
           token: 'support.function.overload.php',
           regex: '\\boverload\\b' },
         { caseInsensitive: true,
           token: 'support.function.pcntl.php',
           regex: '\\bpcntl_(s(ig(nal(_dispatch)?|timedwait|procmask|waitinfo)|etpriority)|exec|fork|w(stopsig|termsig|if(s(topped|ignaled)|exited)|exitstatus|ait(pid)?)|alarm|getpriority)\\b' },
         { caseInsensitive: true,
           token: 'support.function.pgsql.php',
           regex: '\\bpg_(se(nd_(prepare|execute|query(_params)?)|t_(client_encoding|error_verbosity)|lect)|host|num_(fields|rows)|c(o(n(nect(ion_(status|reset|busy))?|vert)|py_(to|from))|l(ient_encoding|ose)|ancel_query)|t(ty|ra(nsaction_status|ce))|insert|options|d(elete|bname)|u(n(trace|escape_bytea)|pdate)|p(connect|ing|ort|ut_line|arameter_status|repare)|e(scape_(string|bytea)|nd_copy|xecute)|version|query(_params)?|f(ield_(size|n(um|ame)|t(ype(_oid)?|able)|is_null|prtlen)|etch_(object|a(ssoc|ll(_columns)?|rray)|r(ow|esult))|ree_result)|l(o_(seek|c(lose|reate)|tell|import|open|unlink|export|write|read(_all)?)|ast_(notice|oid|error))|affected_rows|result_(s(tatus|eek)|error(_field)?)|get_(notify|pid|result)|meta_data)\\b' },
         { caseInsensitive: true,
           token: 'support.function.php_apache.php',
           regex: '\\b(virtual|apache_(setenv|note|child_terminate|lookup_uri|re(s(ponse_headers|et_timeout)|quest_headers)|get(_(version|modules)|env))|getallheaders)\\b' },
         { caseInsensitive: true,
           token: 'support.function.php_dom.php',
           regex: '\\bdom_import_simplexml\\b' },
         { caseInsensitive: true,
           token: 'support.function.php_ftp.php',
           regex: '\\bftp_(s(sl_connect|ystype|i(te|ze)|et_option)|n(list|b_(continue|put|f(put|get)|get))|c(h(dir|mod)|onnect|dup|lose)|delete|p(ut|wd|asv)|exec|quit|f(put|get)|login|alloc|r(ename|aw(list)?|mdir)|get(_option)?|m(dtm|kdir))\\b' },
         { caseInsensitive: true,
           token: 'support.function.php_imap.php',
           regex: '\\bimap_(s(can(mailbox)?|tatus|ort|ubscribe|e(t(_quota|flag_full|acl)|arch)|avebody)|header(s|info)?|num_(recent|msg)|c(heck|l(ose|earflag_full)|reate(mailbox)?)|t(hread|imeout)|open|delete(mailbox)?|8bit|u(n(subscribe|delete)|tf(7_(decode|encode)|8)|id)|ping|e(rrors|xpunge)|qprint|fetch(structure|header|text|_overview|mime|body)|l(sub|ist(s(can|ubscribed)|mailbox)?|ast_error)|a(ppend|lerts)|r(e(name(mailbox)?|open)|fc822_(parse_(headers|adrlist)|write_address))|g(c|et(subscribed|_quota(root)?|acl|mailboxes))|m(sgno|ime_header_decode|ail(_(co(py|mpose)|move)|boxmsginfo)?)|b(inary|ody(struct)?|ase64))\\b' },
         { caseInsensitive: true,
           token: 'support.function.php_mssql.php',
           regex: '\\bmssql_(select_db|n(um_(fields|rows)|ext_result)|c(onnect|lose)|init|data_seek|pconnect|execute|query|f(ield_(seek|name|type|length)|etch_(object|field|a(ssoc|rray)|row|batch)|ree_(statement|result))|r(ows_affected|esult)|g(uid_string|et_last_message)|min_(error_severity|message_severity)|bind)\\b' },
         { caseInsensitive: true,
           token: 'support.function.php_odbc.php',
           regex: '\\bodbc_(s(tatistics|pecialcolumns|etoption)|n(um_(fields|rows)|ext_result)|c(o(nnect|lumn(s|privileges)|mmit)|ursor|lose(_all)?)|table(s|privileges)|d(o|ata_source)|p(connect|r(imarykeys|ocedure(s|columns)|epare))|e(rror(msg)?|xec(ute)?)|f(ield_(scale|n(um|ame)|type|precision|len)|oreignkeys|etch_(into|object|array|row)|ree_result)|longreadlen|autocommit|r(ollback|esult(_all)?)|gettypeinfo|binmode)\\b' },
         { caseInsensitive: true,
           token: 'support.function.php_pcre.php',
           regex: '\\bpreg_(split|quote|filter|last_error|replace(_callback)?|grep|match(_all)?)\\b' },
         { caseInsensitive: true,
           token: 'support.function.php_spl.php',
           regex: '\\b(spl_(classes|object_hash|autoload(_(call|unregister|extensions|functions|register))?)|class_(implements|parents)|iterator_(count|to_array|apply))\\b' },
         { caseInsensitive: true,
           token: 'support.function.php_zip.php',
           regex: '\\bzip_(close|open|entry_(name|c(ompress(ionmethod|edsize)|lose)|open|filesize|read)|read)\\b' },
         { caseInsensitive: true,
           token: 'support.function.posix.php',
           regex: '\\bposix_(s(trerror|et(sid|uid|pgid|e(uid|gid)|gid))|ctermid|t(tyname|imes)|i(satty|nitgroups)|uname|errno|kill|access|get(sid|cwd|uid|_last_error|p(id|pid|w(nam|uid)|g(id|rp))|e(uid|gid)|login|rlimit|g(id|r(nam|oups|gid)))|mk(nod|fifo))\\b' },
         { caseInsensitive: true,
           token: 'support.function.proctitle.php',
           regex: '\\bset(threadtitle|proctitle)\\b' },
         { caseInsensitive: true,
           token: 'support.function.pspell.php',
           regex: '\\bpspell_(s(tore_replacement|uggest|ave_wordlist)|new(_(config|personal))?|c(heck|onfig_(save_repl|create|ignore|d(ict_dir|ata_dir)|personal|r(untogether|epl)|mode)|lear_session)|add_to_(session|personal))\\b' },
         { caseInsensitive: true,
           token: 'support.function.readline.php',
           regex: '\\breadline(_(c(ompletion_function|lear_history|allback_(handler_(install|remove)|read_char))|info|on_new_line|write_history|list_history|add_history|re(display|ad_history)))?\\b' },
         { caseInsensitive: true,
           token: 'support.function.recode.php',
           regex: '\\brecode(_(string|file))?\\b' },
         { caseInsensitive: true,
           token: 'support.function.rrd.php',
           regex: '\\brrd_(create|tune|info|update|error|f(irst|etch)|last(update)?|restore|graph|xport)\\b' },
         { caseInsensitive: true,
           token: 'support.function.sem.php',
           regex: '\\b(s(hm_(has_var|detach|put_var|attach|remove(_var)?|get_var)|em_(acquire|re(lease|move)|get))|ftok|msg_(s(tat_queue|e(nd|t_queue))|queue_exists|re(ceive|move_queue)|get_queue))\\b' },
         { caseInsensitive: true,
           token: 'support.function.session.php',
           regex: '\\bsession_(s(tart|et_(save_handler|cookie_params)|ave_path)|name|c(ommit|ache_(expire|limiter))|i(s_registered|d)|de(stroy|code)|un(set|register)|encode|write_close|reg(ister|enerate_id)|get_cookie_params|module_name)\\b' },
         { caseInsensitive: true,
           token: 'support.function.shmop.php',
           regex: '\\bshmop_(size|close|open|delete|write|read)\\b' },
         { caseInsensitive: true,
           token: 'support.function.simplexml.php',
           regex: '\\bsimplexml_(import_dom|load_(string|file))\\b' },
         { caseInsensitive: true,
           token: 'support.function.snmp.php',
           regex: '\\bsnmp(set|2_(set|walk|real_walk|get(next)?)|_(set_(oid_(numeric_print|output_format)|enum_print|valueretrieval|quick_print)|read_mib|get_(valueretrieval|quick_print))|3_(set|walk|real_walk|get(next)?)|walk(oid)?|realwalk|get(next)?)\\b' },
         { caseInsensitive: true,
           token: 'support.function.soap.php',
           regex: '\\b(is_soap_fault|use_soap_error_handler)\\b' },
         { caseInsensitive: true,
           token: 'support.function.sockets.php',
           regex: '\\bsocket_(s(hutdown|trerror|e(nd(to)?|t_(nonblock|option|block)|lect))|c(onnect|l(ose|ear_error)|reate(_(pair|listen))?)|write|l(isten|ast_error)|accept|re(cv(from)?|ad)|get(sockname|_option|peername)|bind)\\b' },
         { caseInsensitive: true,
           token: 'support.function.sqlite.php',
           regex: '\\bsqlite_(s(ingle_query|eek)|has_(prev|more)|n(um_(fields|rows)|ext)|c(hanges|olumn|urrent|lose|reate_(function|aggregate))|open|u(nbuffered_query|df_(decode_binary|encode_binary))|p(open|rev)|e(scape_string|rror_string|xec)|valid|key|query|f(ield_name|etch_(s(tring|ingle)|column_types|object|a(ll|rray))|actory)|l(ib(encoding|version)|ast_(insert_rowid|error))|array_query|rewind|busy_timeout)\\b' },
         { caseInsensitive: true,
           token: 'support.function.stats.php',
           regex: '\\bstats_(s(ta(ndard_deviation|t_(noncentral_t|correlation|in(nerproduct|dependent_t)|p(owersum|ercentile|aired_t)|gennch|binomial_coef))|kew)|harmonic_mean|c(ovariance|df_(n(oncentral_(chisquare|f)|egative_binomial)|c(hisquare|auchy)|t|uniform|poisson|exponential|f|weibull|l(ogistic|aplace)|gamma|b(inomial|eta)))|den(s_(n(ormal|egative_binomial)|c(hisquare|auchy)|t|pmf_(hypergeometric|poisson|binomial)|exponential|f|weibull|l(ogistic|aplace)|gamma|beta)|_uniform)|variance|kurtosis|absolute_deviation|rand_(setall|phrase_to_seeds|ranf|ge(n_(no(ncen(tral_(t|f)|ral_chisquare)|rmal)|chisquare|t|i(nt|uniform|poisson|binomial(_negative)?)|exponential|f(uniform)?|gamma|beta)|t_seeds)))\\b' },
         { caseInsensitive: true,
           token: 'support.function.streamsfuncs.php',
           regex: '\\bs(tream_(s(ocket_(s(hutdown|e(ndto|rver))|client|pair|enable_crypto|accept|recvfrom|get_name)|upports_lock|e(t_(timeout|write_buffer|read_buffer|blocking)|lect))|notification_callback|co(ntext_(set_(option|default|params)|create|get_(options|default|params))|py_to_stream)|is_local|encoding|filter_(prepend|append|re(gister|move))|wrapper_(unregister|re(store|gister))|re(solve_include_path|gister_wrapper)|get_(contents|transports|filters|wrappers|line|meta_data)|bucket_(new|prepend|append|make_writeable))|et_socket_blocking)\\b' },
         { caseInsensitive: true,
           token: 'support.function.string.php',
           regex: '\\b(s(scanf|ha1(_file)?|tr(s(tr|pn)|n(c(asecmp|mp)|atc(asecmp|mp))|c(spn|hr|oll|asecmp|mp)|t(o(upper|k|lower)|r)|i(str|p(slashes|cslashes|os|_tags))|_(s(huffle|plit)|ireplace|pad|word_count|r(ot13|ep(eat|lace))|getcsv)|p(os|brk)|len|r(chr|ipos|pos|ev))|imilar_text|oundex|ubstr(_(co(unt|mpare)|replace))?|printf|etlocale)|h(tml(specialchars(_decode)?|_entity_decode|entities)|ebrev(c)?)|n(umber_format|l(2br|_langinfo))|c(h(op|unk_split|r)|o(nvert_(cyr_string|uu(decode|encode))|unt_chars)|r(ypt|c32))|trim|implode|ord|uc(first|words)|join|p(arse_str|rint(f)?)|e(cho|xplode)|v(sprintf|printf|fprintf)|quote(d_printable_(decode|encode)|meta)|fprintf|wordwrap|l(cfirst|trim|ocaleconv|evenshtein)|add(slashes|cslashes)|rtrim|get_html_translation_table|m(oney_format|d5(_file)?|etaphone)|bin2hex)\\b' },
         { caseInsensitive: true,
           token: 'support.function.sybase.php',
           regex: '\\bsybase_(se(t_message_handler|lect_db)|num_(fields|rows)|c(onnect|lose)|d(eadlock_retry_count|ata_seek)|unbuffered_query|pconnect|query|f(ield_seek|etch_(object|field|a(ssoc|rray)|row)|ree_result)|affected_rows|result|get_last_message|min_(server_severity|client_severity|error_severity|message_severity))\\b' },
         { caseInsensitive: true,
           token: 'support.function.tidy.php',
           regex: '\\b(tidy_(s(et(opt|_encoding)|ave_config)|c(onfig_count|lean_repair)|is_x(html|ml)|diagnose|parse_(string|file)|error_count|warning_count|load_config|access_count|re(set_config|pair_(string|file))|get(opt|_(status|h(tml(_ver)?|ead)|config|o(utput|pt_doc)|error_buffer|r(oot|elease)|body)))|ob_tidyhandler)\\b' },
         { caseInsensitive: true,
           token: 'support.function.tokenizer.php',
           regex: '\\btoken_(name|get_all)\\b' },
         { caseInsensitive: true,
           token: 'support.function.url.php',
           regex: '\\b(http_build_query|url(decode|encode)|parse_url|rawurl(decode|encode)|get_(headers|meta_tags)|base64_(decode|encode))\\b' },
         { caseInsensitive: true,
           token: 'support.function.var.php',
           regex: '\\b(s(trval|e(ttype|rialize))|i(s(set|_(s(calar|tring)|nu(ll|meric)|callable|int(eger)?|object|double|float|long|array|re(source|al)|bool))|ntval|mport_request_variables)|d(oubleval|ebug_zval_dump)|unse(t|rialize)|print_r|empty|var_(dump|export)|floatval|get(type|_(defined_vars|resource_type)))\\b' },
         { caseInsensitive: true,
           token: 'support.function.wddx.php',
           regex: '\\bwddx_(serialize_va(lue|rs)|deserialize|packet_(start|end)|add_vars)\\b' },
         { caseInsensitive: true,
           token: 'support.function.xhprof.php',
           regex: '\\bxhprof_(sample_(disable|enable)|disable|enable)\\b' },
         { caseInsensitive: true,
           token: 'support.function.xml.php',
           regex: '\\b(utf8_(decode|encode)|xml_(set_(start_namespace_decl_handler|notation_decl_handler|character_data_handler|object|default_handler|unparsed_entity_decl_handler|processing_instruction_handler|e(nd_namespace_decl_handler|lement_handler|xternal_entity_ref_handler))|parse(_into_struct|r_(set_option|create(_ns)?|free|get_option))?|error_string|get_(current_(column_number|line_number|byte_index)|error_code)))\\b' },
         { caseInsensitive: true,
           token: 'support.function.xmlrpc.php',
           regex: '\\bxmlrpc_(se(t_type|rver_(c(all_method|reate)|destroy|add_introspection_data|register_(introspection_callback|method)))|is_fault|decode(_request)?|parse_method_descriptions|encode(_request)?|get_type)\\b' },
         { caseInsensitive: true,
           token: 'support.function.xmlwriter.php',
           regex: '\\bxmlwriter_(s(tart_(c(omment|data)|d(td(_(e(ntity|lement)|attlist))?|ocument)|pi|element(_ns)?|attribute(_ns)?)|et_indent(_string)?)|text|o(utput_memory|pen_(uri|memory))|end_(c(omment|data)|d(td(_(e(ntity|lement)|attlist))?|ocument)|pi|element|attribute)|f(ull_end_element|lush)|write_(c(omment|data)|dtd(_(e(ntity|lement)|attlist))?|pi|element(_ns)?|attribute(_ns)?|raw))\\b' },
         { caseInsensitive: true,
           token: 'support.function.xslt.php',
           regex: '\\bxslt_(set(opt|_(s(cheme_handler(s)?|ax_handler(s)?)|object|e(ncoding|rror_handler)|log|base))|create|process|err(no|or)|free|getopt|backend_(name|info|version))\\b' },
         { caseInsensitive: true,
           token: 'support.function.zlib.php',
           regex: '\\b(zlib_get_coding_type|readgzfile|gz(seek|c(ompress|lose)|tell|inflate|open|de(code|flate)|uncompress|p(uts|assthru)|e(ncode|of)|file|write|re(wind|ad)|get(s(s)?|c)))\\b' },
         { caseInsensitive: true,
           token: 'support.function.alias.php',
           regex: '\\bis_int(eger)?\\b' } ],
      '#tag-generic-attribute': 
       [ { TODO: 'FIXME: regexp doesn\'t have js equivalent',
           originalRegex: '(?<=[^=])\\b([a-zA-Z0-9:-]+)',
           token: 'entity.other.attribute-name.html',
           regex: '(?<=[^=])\\b([a-zA-Z0-9:-]+)' } ],
      '#tag-id-attribute': 
       [ { caseInsensitive: true,
           todo: 'fix grouping',
           token: 
            [ 'meta.attribute-with-value.id.html',
              'entity.other.attribute-name.id.html',
              'punctuation.separator.key-value.html' ],
           regex: '\\b(id)\\b\\s*(=)',
           push: 
            [ { token: 'punctuation.definition.string.begin.html',
                regex: '"',
                push: 
                 [ { include: '#embedded-code' },
                   { include: '#entities' },
                   { token: 'punctuation.definition.string.end.html',
                     regex: '"',
                     next: 'pop' },
                   { defaultToken: 'string.quoted.double.html' } ] },
              { token: 'punctuation.definition.string.begin.html',
                regex: '\'',
                push: 
                 [ { include: '#embedded-code' },
                   { include: '#entities' },
                   { token: 'punctuation.definition.string.end.html',
                     regex: '\'',
                     next: 'pop' },
                   { defaultToken: 'string.quoted.single.html' } ] },
              { todo: 'fix grouping',
                TODO: 'FIXME: regexp doesn\'t have js equivalent',
                originalRegex: '(?<=\'|")',
                token: 
                 [ 'meta.attribute-with-value.id.html',
                   'entity.other.attribute-name.id.html',
                   'punctuation.separator.key-value.html' ],
                regex: '(?<=\'|")',
                next: 'pop' },
              { defaultToken: 'meta.attribute-with-value.id.html' } ] } ],
      '#tag-stuff': 
       [ { include: '#tag-id-attribute' },
         { include: '#tag-generic-attribute' },
         { include: '#string-double-quoted' },
         { include: '#string-single-quoted' },
         { include: '#embedded-code' },
         { include: '#unquoted-attribute' } ],
      '#unquoted-attribute': 
       [ { TODO: 'FIXME: regexp doesn\'t have js equivalent',
           originalRegex: '(?<==)(?:[^\\s<>/\'"]|/(?!>))+',
           token: 'string.unquoted.html',
           regex: '(?<==)(?:[^\\s<>/\'"]|/(?!>))+' } ],
      '#user-function-call': 
       [ { caseInsensitive: true,
           token: 'meta.function-call.php',
           regex: '(?=[a-z_0-9\\\\]*[a-z_][a-z0-9_]*\\s*\\()',
           push: 
            [ { include: '#namespace' },
              { caseInsensitive: true,
                token: 'meta.function-call.php',
                regex: '[a-z_][a-z_0-9]*(?=\\s*\\()',
                next: 'pop' },
              { defaultToken: 'meta.function-call.php' } ] } ],
      '#var_basic': 
       [ { todo: 'fix grouping',
           token: [ 'variable.other.php', 'punctuation.definition.variable.php' ],
           regex: '(\\$+)[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*?\\b' } ],
      '#var_global': 
       [ { todo: 'fix grouping',
           token: 
            [ 'variable.other.global.php',
              'punctuation.definition.variable.php' ],
           regex: '(\\$)((_(COOKIE|FILES|GET|POST|REQUEST))|arg(v|c))\\b' } ],
      '#var_global_safer': 
       [ { todo: 'fix grouping',
           token: 
            [ 'variable.other.global.safer.php',
              'punctuation.definition.variable.php' ],
           regex: '(\\$)((GLOBALS|_(ENV|SERVER|SESSION)))' } ],
      '#variable-name': 
       [ { include: '#var_global' },
         { include: '#var_global_safer' },
         { todo: 'fix grouping',
           TODO: 'FIXME: regexp doesn\'t have js equivalent',
           originalRegex: '(?x)\r\n\t\t\t\t\t\t((\\$)(?<name>[a-zA-Z_\\x{7f}-\\x{ff}][a-zA-Z0-9_\\x{7f}-\\x{ff}]*))\r\n\t\t\t\t\t\t(?:\r\n\t\t\t\t\t\t\t(->)(\\g<name>)\r\n\t\t\t\t\t\t\t|\r\n\t\t\t\t\t\t\t(\\[)\r\n\t\t\t\t\t\t\t\t(?:(\\d+)|((\\$)\\g<name>)|(\\w+))\r\n\t\t\t\t\t\t\t(\\])\r\n\t\t\t\t\t\t)?\r\n\t\t\t\t\t\t',
           token: 
            [ 'text',
              'variable.other.php',
              'punctuation.definition.variable.php',
              'text',
              'keyword.operator.class.php',
              'variable.other.property.php',
              'punctuation.section.array.begin.php',
              'constant.numeric.index.php',
              'variable.other.index.php',
              'punctuation.definition.variable.php',
              'string.unquoted.index.php',
              'punctuation.section.array.end.php' ],
           regex: '((\\$)(?<name>[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*))(?:(->)(\\g<name>)|(\\[)(?:(\\d+)|((\\$)\\g<name>)|(\\w+))(\\]))?',
           //Simple syntax: $foo, $foo[0], $foo[$bar], $foo->bar
            },
         { todo: 'fix grouping',
           TODO: 'FIXME: regexp doesn\'t have js equivalent',
           originalRegex: '(?x)\r\n\t\t\t\t\t\t((\\$\\{)(?<name>[a-zA-Z_\\x{7f}-\\x{ff}][a-zA-Z0-9_\\x{7f}-\\x{ff}]*)(\\}))\r\n\t\t\t\t\t\t',
           token: 
            [ 'text',
              'variable.other.php',
              'punctuation.definition.variable.php',
              'text',
              'punctuation.definition.variable.php' ],
           regex: '((\\$\\{)(?<name>[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*)(\\}))',
           //Simple syntax with braces: "foo${bar}baz"
            } ],
      '#variables': 
       [ { include: '#var_global' },
         { include: '#var_global_safer' },
         { include: '#var_basic' },
         { todo: 'fix grouping',
           token: [ 'text', 'punctuation.definition.variable.php' ],
           regex: '(\\$\\{)(?=.*?\\})',
           push: 
            [ { include: '#language' },
              { todo: 'fix grouping',
                token: [ 'text', 'punctuation.definition.variable.php' ],
                regex: '(\\})',
                next: 'pop' } ] } ] }
    
    this.normalizeRules();
};

oop.inherits(BladeTemplateHighlightRules, TextHighlightRules);

exports.BladeTemplateHighlightRules = BladeTemplateHighlightRules;
});